(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    276465,       5503]
NotebookOptionsPosition[    264702,       5285]
NotebookOutlinePosition[    265045,       5300]
CellTagsIndexPosition[    265002,       5297]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Tutorial notebook", "Title",
 CellChangeTimes->{{3.770716059231833*^9, 
  3.770716068149076*^9}},ExpressionUUID->"49379e96-7bf0-4c47-a2f9-\
951bf514b1c7"],

Cell[CellGroupData[{

Cell["CmdStan package", "Subchapter",
 CellChangeTimes->{{3.770716074637396*^9, 
  3.770716078356945*^9}},ExpressionUUID->"01ce18a6-a605-4b92-adde-\
2e201d75e881"],

Cell[BoxData[
 RowBox[{"<<", "CmdStan`"}]], "Input",
 CellChangeTimes->{{3.770705065854452*^9, 
  3.7707050688964443`*^9}},ExpressionUUID->"9c9c1fdb-ee4f-4773-9410-\
af384f39e6ce"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "CmdStan`*"}]], "Input",
 CellChangeTimes->{{3.770716084173615*^9, 
  3.7707160858775673`*^9}},ExpressionUUID->"6e789827-ae6d-40b6-9021-\
0712d2dfe42c"],

Cell[BoxData[
 DynamicModuleBox[{Typeset`open$$ = True}, 
  PaneSelectorBox[{False->
   RowBox[{
    OpenerBox[Dynamic[Typeset`open$$],
     ImageSize->Small], 
    StyleBox["CmdStan`", "InfoHeading"]}], True->GridBox[{
     {
      RowBox[{
       OpenerBox[Dynamic[Typeset`open$$],
        ImageSize->Small], 
       StyleBox["CmdStan`", "InfoHeading"]}]},
     {GridBox[{
        {
         ButtonBox["CmdStan",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info2343770985384-5993498", {"CmdStan", "CmdStan`"}},
          ButtonNote->"CmdStan`"], 
         ButtonBox["GetCmdStanDirectory",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info2343770985384-5993498", {"GetCmdStanDirectory", "CmdStan`"}},
          ButtonNote->"CmdStan`"], 
         ButtonBox["ImportStanResult",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info2343770985384-5993498", {"ImportStanResult", "CmdStan`"}},
          ButtonNote->"CmdStan`"], 
         ButtonBox["SampleDefaultOptions",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info2343770985384-5993498", {"SampleDefaultOptions", "CmdStan`"}},
          
          ButtonNote->"CmdStan`"], 
         ButtonBox["StanOptions",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info2343770985384-5993498", {"StanOptions", "CmdStan`"}},
          ButtonNote->"CmdStan`"], 
         ButtonBox["StanResultReducedKeys",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info2343770985384-5993498", {"StanResultReducedKeys", "CmdStan`"}},
          ButtonNote->"CmdStan`"], 
         ButtonBox["$CmdStanConfigurationFile",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info2343770985384-5993498", {
            "$CmdStanConfigurationFile", "CmdStan`"}},
          ButtonNote->"CmdStan`"]},
        {
         ButtonBox["CompileStanCode",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info2343770985384-5993498", {"CompileStanCode", "CmdStan`"}},
          ButtonNote->"CmdStan`"], 
         ButtonBox["GetStanOption",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info2343770985384-5993498", {"GetStanOption", "CmdStan`"}},
          ButtonNote->"CmdStan`"], 
         ButtonBox["OptimizeDefaultOptions",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info2343770985384-5993498", {
            "OptimizeDefaultOptions", "CmdStan`"}},
          ButtonNote->"CmdStan`"], 
         ButtonBox["SetCmdStanDirectory",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info2343770985384-5993498", {"SetCmdStanDirectory", "CmdStan`"}},
          ButtonNote->"CmdStan`"], 
         ButtonBox["StanResult",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info2343770985384-5993498", {"StanResult", "CmdStan`"}},
          ButtonNote->"CmdStan`"], 
         ButtonBox["StanResultReducedMetaKeys",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info2343770985384-5993498", {
            "StanResultReducedMetaKeys", "CmdStan`"}},
          ButtonNote->"CmdStan`"], ""},
        {
         ButtonBox["ExportStanCode",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info2343770985384-5993498", {"ExportStanCode", "CmdStan`"}},
          ButtonNote->"CmdStan`"], 
         ButtonBox["GetStanResult",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info2343770985384-5993498", {"GetStanResult", "CmdStan`"}},
          ButtonNote->"CmdStan`"], 
         ButtonBox["RemoveStanOption",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info2343770985384-5993498", {"RemoveStanOption", "CmdStan`"}},
          ButtonNote->"CmdStan`"], 
         ButtonBox["SetStanOption",
          BaseStyle->"InformationLink",
          ButtonData:>{
           "Info2343770985384-5993498", {"SetStanOption", "CmdStan`"}},
          ButtonNote->"CmdStan`"], 
         ButtonBox["StanResultKeys",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info2343770985384-5993498", {"StanResultKeys", "CmdStan`"}},
          ButtonNote->"CmdStan`"], 
         ButtonBox["StanVerbose",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info2343770985384-5993498", {"StanVerbose", "CmdStan`"}},
          ButtonNote->"CmdStan`"], ""},
        {
         ButtonBox["ExportStanData",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info2343770985384-5993498", {"ExportStanData", "CmdStan`"}},
          ButtonNote->"CmdStan`"], 
         ButtonBox["GetStanResultMeta",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info2343770985384-5993498", {"GetStanResultMeta", "CmdStan`"}},
          ButtonNote->"CmdStan`"], 
         ButtonBox["RunStan",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info2343770985384-5993498", {"RunStan", "CmdStan`"}},
          ButtonNote->"CmdStan`"], 
         ButtonBox["StanOptionExistsQ",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info2343770985384-5993498", {"StanOptionExistsQ", "CmdStan`"}},
          ButtonNote->"CmdStan`"], 
         ButtonBox["StanResultMetaKeys",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info2343770985384-5993498", {"StanResultMetaKeys", "CmdStan`"}},
          ButtonNote->"CmdStan`"], 
         ButtonBox["VariationalDefaultOptions",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info2343770985384-5993498", {
            "VariationalDefaultOptions", "CmdStan`"}},
          ButtonNote->"CmdStan`"], ""}
       },
       DefaultBaseStyle->"InfoGrid",
       GridBoxItemSize->{"Columns" -> {{
            Scaled[0.1357142857142857]}}}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}]}, 
   Dynamic[Typeset`open$$],
   ImageSize->Automatic]]], "Print", "InfoCell",
 CellChangeTimes->{
  3.77097818489739*^9},ExpressionUUID->"f336afca-4e12-4495-a12d-c8cb3adb6fb2"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Linear regression", "Chapter",
 CellChangeTimes->{{3.770981148929837*^9, 
  3.770981158965954*^9}},ExpressionUUID->"31a78942-7fb2-4844-aaf4-\
8c79eaafd7be"],

Cell[CellGroupData[{

Cell["Stan code", "Subchapter",
 CellChangeTimes->{{3.770716095261176*^9, 
  3.7707160963650103`*^9}},ExpressionUUID->"dfaf227a-104d-4a80-90ac-\
75b0a4c84174"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SetDirectory", "[", "$TemporaryDirectory", "]"}]], "Input",
 CellChangeTimes->{{3.770707876413391*^9, 
  3.770707887219761*^9}},ExpressionUUID->"a0de6e16-3de1-42c9-b1a8-\
dbfac9a36660"],

Cell[BoxData["\<\"/tmp\"\>"], "Output",
 CellChangeTimes->{{3.770707878941173*^9, 3.770707887991127*^9}, 
   3.770728209136009*^9, 3.7709663588649607`*^9, 3.770977276546837*^9, 
   3.770978184966126*^9},ExpressionUUID->"53e1721c-65bc-4d7e-94c3-\
2ebaafd52915"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
   "stanCode", "=", 
    "\"\<data\n{\n  int<lower = 0> N;\n  vector[N] x;\n  vector[N] y;\n}\n\
parameters\n{\n  real alpha;\n  real beta;\n  real<lower = 0> sigma;\n}\n\
model {\n  y ~normal(alpha + beta * x, sigma);\n}\>\""}], ";"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.7707081599881687`*^9, 3.770708197796472*^9}, {
  3.7707083441492357`*^9, 3.770708392061652*^9}, {3.770709198574538*^9, 
  3.770709198862192*^9}},ExpressionUUID->"1fba61b7-b248-480f-8118-\
0f088e2f99de"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"stanCodeFile", "=", 
  RowBox[{"ExportStanCode", "[", 
   RowBox[{"\"\<linear_regression.stan\>\"", ",", "stanCode"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.770708606622428*^9, 3.770708691204771*^9}, {
  3.770709156022534*^9, 3.770709160381125*^9}, {3.770709202541667*^9, 
  3.770709202877233*^9}},ExpressionUUID->"64d8be3d-d7b2-4105-a1d3-\
9eda70ebdefb"],

Cell[BoxData["\<\"/tmp/linear_regression.stan\"\>"], "Output",
 CellChangeTimes->{{3.770708645067349*^9, 3.770708692236703*^9}, 
   3.7707092340195932`*^9, 3.770728211569268*^9, 3.770966358933157*^9, 
   3.770977276598599*^9, 
   3.770978185051219*^9},ExpressionUUID->"dd26c949-d50c-4a44-8aed-\
8f7526195c2a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Stan exe", "Subchapter",
 CellChangeTimes->{{3.770716108837378*^9, 
  3.770716110709188*^9}},ExpressionUUID->"65a60906-94c0-4691-b9bd-\
72b4c1e8817b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"stanExeFile", " ", "=", " ", 
  RowBox[{"CompileStanCode", "[", 
   RowBox[{"stanCodeFile", ",", 
    RowBox[{"StanVerbose", "\[Rule]", "False"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.770709147037114*^9, 3.7707091647249737`*^9}, {
  3.770709224301529*^9, 3.770709238285572*^9}, {3.770710193776533*^9, 
  3.770710229910884*^9}},ExpressionUUID->"37c914f5-9aa2-4f11-99ef-\
f44a0899d661"],

Cell[BoxData["\<\"/tmp/linear_regression\"\>"], "Output",
 CellChangeTimes->{
  3.770709307299168*^9, 3.770710148341487*^9, {3.770710202133553*^9, 
   3.770710231049559*^9}, 3.770728214191399*^9, 3.770966359622837*^9, 
   3.770977277249737*^9, 
   3.770978185686536*^9},ExpressionUUID->"e0c92d63-02e0-4a98-93fe-\
58415c2a983d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Linear regression data", "Subchapter",
 CellChangeTimes->{{3.77071611671723*^9, 
  3.77071612378906*^9}},ExpressionUUID->"5bddc0a9-3d73-4e93-89df-\
4b844e8a916a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Sigma]", "=", "3"}], ";", 
  RowBox[{"\[Alpha]", "=", "1"}], ";", 
  RowBox[{"\[Beta]", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", "=", "20"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"X", "=", 
   RowBox[{"Range", "[", "n", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Y", "=", 
   RowBox[{"\[Alpha]", "+", 
    RowBox[{"\[Beta]", "*", "X"}], "+", 
    RowBox[{"RandomVariate", "[", 
     RowBox[{
      RowBox[{"NormalDistribution", "[", 
       RowBox[{"0", ",", "\[Sigma]"}], "]"}], ",", "n"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"\[Alpha]", "+", 
       RowBox[{"\[Beta]", "*", "x"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"Min", "[", "X", "]"}], ",", 
        RowBox[{"Max", "[", "X", "]"}]}], "}"}]}], "]"}], ",", 
    RowBox[{"ListPlot", "[", 
     RowBox[{
      RowBox[{"Transpose", "@", 
       RowBox[{"{", 
        RowBox[{"X", ",", "Y"}], "}"}]}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.770710743992337*^9, 3.770710844599894*^9}, {
  3.770710986906942*^9, 3.77071122661648*^9}, {3.770715628426827*^9, 
  3.770715652126151*^9}, {3.770715700797555*^9, 3.770715735013671*^9}, {
  3.77072823119751*^9, 
  3.770728231580427*^9}},ExpressionUUID->"c13ee554-500c-4910-aa79-\
3b7cf06a0c9b"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJwtzX9M1GUAx/FD3Thv3OAyCLviDvAORLkfPMidd8j3AzxlkJx0cZNZFITH
TstocJr8jkBkusEtERVkNjccLkNDkrlmTlgSTHMkGZUxrcBDbV6XeKcHEu15
/vjs9c9ne0e/V2q1LxGJRDmL+9+pNyMcIpFHYIqhU9guTL7gEZhiVN47KLmo
9QhMMcLqZV9WvOsRmGKYekO83m89AlOMFvHS6qmafwTmcqRcfNg6GvAKTAma
1CMDbb5ZgSlFyLWN7pOlc0LTdKzzhuE5DBzerZ1PDeKGQ/NJjnUuaRk3Eu3W
/XbT9mCuHH9/+qv8qEPCjYKhyzWY0iPFMctrRfJxJYo/trvzPgjjxiB6c8jl
qBkZNxYT8mmZuGkFV4V9h7P664PDuXGY0JRKSuojuPGI+WZ4Yrs8kpuAbY9P
+eePruSuwXH1JddXRjk3EdVl7beuX3+Jq0HuTl9F7etR6DkfSL2k0iGq4EDr
prsKtPZ+t/Hkvzp4a/Kqfjqn5Orx4/Dcjucbo7lJaFA09TfnxnAJzljG1a+E
xnKTke8322STsdxk1FQ4TquOr+KuQ7l4d0Hp2ypuCqZkXaPfr1ZzDbjhbS7c
MaPmGpBmaemTX4jjGlE54Hxnyd547nro/Qqiz1zNNcF+7q+hUlkC14zwVz+s
eTyWwDWjfXrC1deyhpuKtqCCwtq31nI3QPqoO/+zFxO5aVhaJJaen0nkpsHZ
rb0X/YWGK2DAZ4gecmhxK9DpKkoGzH+slZjkOmYnkJ+sPJJSpWMGgP5M5TLz
nzpmcTr8v4S9vDVLzxxJx9PfirO7evTM+AyYOods7tAkZmsGjFf27tryURLT
kwHFHmPGnR+SmJZM0Lu+B2XrCPPrTMQNrjwdf4gwwyn22zYvH28nzAiKB+7G
krojhBlJcTbUo7zZSZhyClPBlUMNJwgzhsLiL6ubPEOYWgqn5qq1bZQwsylu
Xg46K1wlzE0U620G6f1rhJlD8azqxHD6GGG+QdE8sif14c+EuYWic5tKnT1F
mPbFv29rw+w0YZZQFB5w3f7cTZgOilV9gQ7ffcJ8n6J3YSy020uYZRRhB4N3
5j4iTCdFuXrDaGCWMHdRGHN6Gq1PCLOCouP273fmnxJmJcV8+Qrh1BxhVi/2
g7OO5T0jzFqKwY7aJwsLhFlH8R86ohrn
        "]]},
      Annotation[#, "Charting`Private`Tag$18633#1"]& ]}, {}, {}}, {{}, {{}, 
     {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], AbsoluteThickness[
      1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7Fu+zd64K0vOASrgkLCsU4BXWRzK53DoU7uS
89lDCcoXcIjSCMnWei8I5Ys4lM8REz6srwLlSzhsib7Dt2WnGpQv46B1nKnw
R5kelK/g8Gxx1SOpAiMoX8kh9cbbSU0imlC+ikMko/BKeRVjKF/N4Xl/jqHT
IQsoX8Nhyx6HjQaxtlC+lsNFrUbLx63WUL6OQxcT/4nIs05Qvp5DiJlny9FI
mH4Dh3s7d03W/W8P5Rs6vHzEv3rOF5h6IweLjAU92RdhfGOHx7HHl8xbAuOb
OBy/Iay8rMnFAQAeUU8d
       "]]}, {}}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{1, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{1, 20}, {0., 40.9999992244898}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.77071106708969*^9, 3.7707111130374002`*^9}, 
   3.7707111721591043`*^9, {3.77071120675381*^9, 3.7707112272419443`*^9}, {
   3.770715723311152*^9, 3.7707157355770817`*^9}, 3.7707158679351397`*^9, {
   3.770728216671455*^9, 3.77072823210876*^9}, 3.7709663599790916`*^9, 
   3.7709772774358397`*^9, 
   3.770978185981914*^9},ExpressionUUID->"fdee63db-c534-49b1-9afa-\
8b2c1f4d7a21"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<~/GitHub/MathematicaStan/figures/linRegData.png\>\"", ",", "%"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7707158348947983`*^9, 
  3.770715884037594*^9}},ExpressionUUID->"7e175cb8-d120-44c6-8b30-\
e9ec48dc3c46"],

Cell[BoxData["\<\"~/GitHub/MathematicaStan/figures/linRegData.png\"\>"], \
"Output",
 CellChangeTimes->{{3.7707158620012093`*^9, 3.7707158850910273`*^9}, 
   3.770728235763579*^9, 3.7709663604638567`*^9, 3.770977277883439*^9, 
   3.770978186700137*^9},ExpressionUUID->"63201a10-247b-4a62-9c5a-\
359a5da9422f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Stan data.R file", "Subchapter",
 CellChangeTimes->{{3.770716138277171*^9, 
  3.770716141301523*^9}},ExpressionUUID->"04e04e67-d72b-4748-80ff-\
e5e995a02cce"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"stanData", "=", 
   RowBox[{"<|", 
    RowBox[{
     RowBox[{"\"\<N\>\"", "\[Rule]", "n"}], ",", 
     RowBox[{"\"\<x\>\"", "\[Rule]", "X"}], ",", 
     RowBox[{"\"\<y\>\"", "\[Rule]", "Y"}]}], "|>"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"stanDataFile", "=", 
  RowBox[{"ExportStanData", "[", 
   RowBox[{"stanExeFile", ",", "stanData"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.770716148118916*^9, 3.770716154549657*^9}, {
  3.770716712246912*^9, 
  3.770716775014164*^9}},ExpressionUUID->"61e5808f-a56a-4af8-9f21-\
d750f560f951"],

Cell[BoxData["\<\"/tmp/linear_regression.data.R\"\>"], "Output",
 CellChangeTimes->{
  3.770716775878848*^9, {3.770728223184442*^9, 3.770728237838388*^9}, 
   3.770966360475802*^9, 3.770977277896429*^9, 
   3.770978186712336*^9},ExpressionUUID->"d4ad3228-dd2c-49ed-a69b-\
75fb32fcaa1c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Run Stan: \
\[OpenCurlyDoubleQuote]method=Optimize\[CloseCurlyDoubleQuote]", "Subchapter",\

 CellChangeTimes->{{3.7707172589905663`*^9, 3.770717262142745*^9}, {
  3.7707174423507767`*^9, 3.7707174708309317`*^9}, {3.770717515239135*^9, 
  3.7707175250468483`*^9}},ExpressionUUID->"e0cfeb10-bdc3-4c17-8229-\
f5b6d7070fba"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"stanResultFile", "=", 
  RowBox[{"RunStan", "[", 
   RowBox[{"stanExeFile", ",", "OptimizeDefaultOptions"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.770717356769566*^9, 3.770717395374997*^9}, {
  3.770717431687707*^9, 3.770717433687216*^9}, {3.770717487943592*^9, 
  3.770717502215275*^9}},ExpressionUUID->"01a3bbb1-49c1-4ce5-a1a8-\
456bc45817fc"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Running: \"\>", 
   "\[InvisibleSpace]", "\<\"/tmp/linear_regression method=optimize data \
file=/tmp/linear_regression.data.R output \
file=/tmp/linear_regression.csv\"\>"}],
  SequenceForm[
  "Running: ", 
   "/tmp/linear_regression method=optimize data \
file=/tmp/linear_regression.data.R output file=/tmp/linear_regression.csv"],
  Editable->False]], "Print",
 CellChangeTimes->{3.7707175031528788`*^9, 3.770728239952798*^9, 
  3.7709663605259533`*^9, 3.7709772779347258`*^9, 
  3.770978186774683*^9},ExpressionUUID->"4d2e6155-3723-4a40-9333-\
71e0cb38fb78"],

Cell[BoxData["\<\"method = optimize\\n  optimize\\n    algorithm = lbfgs \
(Default)\\n      lbfgs\\n        init_alpha = 0.001 (Default)\\n        \
tol_obj = 9.9999999999999998e-13 (Default)\\n        tol_rel_obj = 10000 \
(Default)\\n        tol_grad = 1e-08 (Default)\\n        tol_rel_grad = \
10000000 (Default)\\n        tol_param = 1e-08 (Default)\\n        \
history_size = 5 (Default)\\n    iter = 2000 (Default)\\n    save_iterations \
= 0 (Default)\\nid = 0 (Default)\\ndata\\n  file = \
/tmp/linear_regression.data.R\\ninit = 2 (Default)\\nrandom\\n  seed = \
3036422700\\noutput\\n  file = /tmp/linear_regression.csv\\n  diagnostic_file \
=  (Default)\\n  refresh = 100 (Default)\\n\\nInitial log joint probability = \
-6230.82\\n    Iter      log prob        ||dx||      ||grad||       alpha     \
 alpha0  # evals  Notes \\nError evaluating model log probability: Non-finite \
gradient.\\nError evaluating model log probability: Non-finite \
gradient.\\n\\n      20      -35.2776    0.00157027   0.000475905      0.9838 \
     0.9838       52   \\nOptimization terminated normally: \\n  Convergence \
detected: relative gradient magnitude is below tolerance\\n\"\>"], "Print",
 CellChangeTimes->{3.7707175031528788`*^9, 3.770728239952798*^9, 
  3.7709663605259533`*^9, 3.7709772779347258`*^9, 
  3.770978186835404*^9},ExpressionUUID->"b9982a7d-7db2-4324-bd75-\
5eac950cdc14"]
}, Open  ]],

Cell[BoxData["\<\"/tmp/linear_regression.csv\"\>"], "Output",
 CellChangeTimes->{3.770717503197805*^9, 3.770728239958706*^9, 
  3.7709663605696507`*^9, 3.770977277969384*^9, 
  3.770978186846767*^9},ExpressionUUID->"da247567-8f03-41a9-84c2-\
d42900babe87"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RunStan", "[", 
  RowBox[{"stanExeFile", ",", "OptimizeDefaultOptions", ",", 
   RowBox[{"StanVerbose", "\[Rule]", "False"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.770717614663068*^9, 
  3.7707176209993267`*^9}},ExpressionUUID->"21d808c7-02d3-4c62-8527-\
848d3feedbc1"],

Cell[BoxData["\<\"/tmp/linear_regression.csv\"\>"], "Output",
 CellChangeTimes->{3.770717621685142*^9, 3.7707282441550817`*^9, 
  3.770966360605403*^9, 3.770977278006762*^9, 
  3.770978186897719*^9},ExpressionUUID->"bb4bb9b3-d328-4f89-bdad-\
238fb7c55a76"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["OptimizeDefaultOptions"], "Input",ExpressionUUID->"82adc528-4c39-41df-8c9b-e39c9357af43"],

Cell[BoxData["\<\"method=optimize \"\>"], "Output",
 CellChangeTimes->{3.770717757004765*^9, 3.770728245378552*^9, 
  3.7709663606218433`*^9, 3.770977278016938*^9, 
  3.770978186918141*^9},ExpressionUUID->"06b447e9-55ba-46be-a0f5-\
663cedc76bde"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Load result", "Subchapter",
 CellChangeTimes->{{3.7707179535194807`*^9, 
  3.7707179600311937`*^9}},ExpressionUUID->"1ca7c626-53e2-494a-88ea-\
c7b0c80c5b4a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"stanResult", "=", 
  RowBox[{"ImportStanResult", "[", "stanResultFile", "]"}]}]], "Input",
 CellChangeTimes->{{3.770717972761725*^9, 
  3.77071799088901*^9}},ExpressionUUID->"dca93945-02ef-43df-b9ec-\
29e1372a9718"],

Cell[BoxData["\<\"     file: /tmp/linear_regression.csv\\n     meta: lp__ \
\\nparameter: alpha , beta , sigma \"\>"], "Output",
 CellChangeTimes->{{3.7707179871505947`*^9, 3.770717991706212*^9}, 
   3.770728248614003*^9, 3.770966362151495*^9, 3.7709772780703793`*^9, 
   3.770978186983336*^9},ExpressionUUID->"6ef46c13-c572-4437-b608-\
29bd058079ad"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"GetStanResultMeta", "[", 
  RowBox[{"stanResult", ",", "\"\<lp__\>\""}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"\[Alpha]e", "=", 
  RowBox[{"GetStanResult", "[", 
   RowBox[{"stanResult", ",", "\"\<alpha\>\""}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"\[Beta]e", "=", 
  RowBox[{"GetStanResult", "[", 
   RowBox[{"stanResult", ",", "\"\<beta\>\""}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"\[Sigma]e", "=", 
  RowBox[{"GetStanResult", "[", 
   RowBox[{"stanResult", ",", "\"\<sigma\>\""}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.7707185643380632`*^9, 3.770718641448357*^9}, {
  3.7707188927408543`*^9, 3.7707189129933233`*^9}, {3.770982568730753*^9, 
  3.770982569392754*^9}},ExpressionUUID->"c2410238-a84f-43ba-a000-\
6aeff30d52e6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"-", "35.2776`"}], "}"}]], "Output",
 CellChangeTimes->{{3.770718584414301*^9, 3.7707186421673927`*^9}, 
   3.770718682119005*^9, 3.770718913699904*^9, 3.770728250233789*^9, 
   3.770966362513288*^9, 3.770977278080534*^9, 3.770978186994947*^9, 
   3.770982575383664*^9},ExpressionUUID->"0b2f0c15-5c6c-4815-88f7-\
47dda39ac607"],

Cell[BoxData[
 RowBox[{"{", "1.25552`", "}"}]], "Output",
 CellChangeTimes->{{3.770718584414301*^9, 3.7707186421673927`*^9}, 
   3.770718682119005*^9, 3.770718913699904*^9, 3.770728250233789*^9, 
   3.770966362513288*^9, 3.770977278080534*^9, 3.770978186994947*^9, 
   3.7709825753864727`*^9},ExpressionUUID->"60f8d005-f038-43b3-8769-\
460299d8aaa7"],

Cell[BoxData[
 RowBox[{"{", "1.99124`", "}"}]], "Output",
 CellChangeTimes->{{3.770718584414301*^9, 3.7707186421673927`*^9}, 
   3.770718682119005*^9, 3.770718913699904*^9, 3.770728250233789*^9, 
   3.770966362513288*^9, 3.770977278080534*^9, 3.770978186994947*^9, 
   3.770982575388863*^9},ExpressionUUID->"2e45dc31-9744-48f7-9b32-\
2b59d6ccd116"],

Cell[BoxData[
 RowBox[{"{", "3.53913`", "}"}]], "Output",
 CellChangeTimes->{{3.770718584414301*^9, 3.7707186421673927`*^9}, 
   3.770718682119005*^9, 3.770718913699904*^9, 3.770728250233789*^9, 
   3.770966362513288*^9, 3.770977278080534*^9, 3.770978186994947*^9, 
   3.7709825753910913`*^9},ExpressionUUID->"615f1b92-46d8-415b-9a39-\
f1e0706adcc4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Alpha]e", "+", 
        RowBox[{"\[Beta]e", "*", "x"}]}], ",", 
       RowBox[{"\[Alpha]", "+", 
        RowBox[{"\[Beta]", "*", "x"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"Min", "[", "X", "]"}], ",", 
       RowBox[{"Max", "[", "X", "]"}]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], "]"}], ",", 
   
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "@", 
      RowBox[{"{", 
       RowBox[{"X", ",", "Y"}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<~/GitHub/MathematicaStan/figures/linRegEstimate.png\>\"", ",", "%"}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.7707189295396557`*^9, 3.770718964873588*^9}, {
  3.770719069355921*^9, 3.7707190987138453`*^9}, {3.770719220424189*^9, 
  3.77071941171453*^9}, {3.7707196079076433`*^9, 
  3.770719615785963*^9}},ExpressionUUID->"ed7aa33f-ddb3-4f9d-8a76-\
b2092623b631"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwVkHsw1AkAx0WFjdaOSznOWo+15bHWz3rsqv3iV43kMbJs4XphlkKe5bHi
7KKapPKoPNKDUirU5arLpaY8xl6j66GuREWbUmuHVrE598d3Pv98Zj4zX8a2
pJAYbS0trYC5/c/hDSZiLS2lQBXAuR71TR/OdOGNgaVKwaMmKsmgUZA1epRy
m60UNC/63PeORYFRPu1S5malILH7wtgOEQW8ywYqVbtSMEra2Ga1UVCip5Mz
LBkXDPKXllWkL4Lb7S+HeqZVgt7lmuSH4wYoZHa3laknBQ0Luh29R6kwkK9V
NCTNCP4oz/Dc52iMtsoMtsZrHoymrRYGs03glBcQMuMyHzcb5XwNwxQVIftj
eHG6SDi0SnQq1Bxjv70wOy6moLyzu/ZMMB3uNaV33c4bIrrKMDZwDQPbd8co
QncaoWE3l9P+0gqMIIMOiw80MCTxtFfhNug3G6HpFRqDUasdo1bZoqjS71q+
7hJEKs7J76TYod8piRKbbwJBeG+8ZpQFq1ud/XFmy9AwtCGbW7AC0V8bpzTH
TeFXrqgz13LASeZfpS0eZkiOHvScrXZETkrFy4cPzQFRuK7QhY3gBHVmrr8F
zt4cm3AIc4ZF1IFD69/T8SlsiO5ozYFKEpr95Kol+ooinkjfcPCocyb+JykD
mWuKyBctLiigF14rDrZCeqUqIE5C4ErgY+ZqqjUWS94NBfFdIZriC2kD1ohT
FrFd9bmQZIqbbE/aYNtUi+6ubi5S9TKikiJtceWIWdawzA3DtJqeruVM3L7p
1iAKccc/quIt8R+YiN/dH2lN88CqwJJWsxt2eN5hL//42gNZbWm/astYqK5t
fzZ2wROcKTrB8V2OaWr/zrViHmKuvruXRFsBC+qZW7VcPpasSZR87VuBgdMT
ZQGTfFSM9Je2lthD1SXTc2vxQtm8qC25EQ7oyunimktWwnCiXnTkZ0d43T88
tpG/Cjpb9Qyvf3BESpXB5nJ9AdLq2aOMi05YvXBxBKtHgDa1O+OemI3r+ef2
ZPkC/DcOFJ6ZM+w76+peN87d7mp5zC3bGZ/DXh3cpe+Na76W8/lvnXH0kipc
K9kbU8+Nftnkx8FWud2Xpqfe+P7v9nU15znIda/zl3F9wKu6J1RQXZAjHpdG
VvvA44EsPXyXC7rfygo2z/iAvsfDZ+hvF3izeEF7N/mCfK/+lMIlcJzoVNfc
8YXdXdMmVjkB7KuMUdBJ7BcG6T+uIGC1surtYQaJTwpp7N5jBHTGa7fyrUk0
U5WWT6sI3Bc1RJUwSfCiHpQXnCbgz/pd6OpIInAqZe/AFQKizker83gk0px6
Q8p6CCQuWMxcJiTxtGNes6CXQNAN2tmOMBKeQnfDj3ICnIQlVjtEJH5kn+70
7iMw8djcoj2CRHH3Hq8vzwhknbU3id5GoiralrlumEChr9/C5qQ5X72pYHKE
gFi9XroxmcSWA6WDdQoCfheDtXVSSdi0Tp9QfySwyFj0Q5hB4vJsH7VeReDw
m9iv0zkkjI7qJgRPEEipiE+rzyWRylzZMz1JIHRdoiowj4RHwHlpyDcCS1vT
P58qIHFi8NWQ5juBqZjMnf4yEppUY0HjDIEXppLRicK5vq5fdegPAn/K88S1
xSTunsj9NjtLoCZfOrJ2P4n/AMtUGpg=
           "]]}, 
         Annotation[#, "Charting`Private`Tag$19404#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwtzX9M1GUAx/FD3Thv3OAyCLviDvAORLkfPMidd8j3AzxlkJx0cZNZFITH
TstocJr8jkBkusEtERVkNjccLkNDkrlmTlgSTHMkGZUxrcBDbV6XeKcHEu15
/vjs9c9ne0e/V2q1LxGJRDmL+9+pNyMcIpFHYIqhU9guTL7gEZhiVN47KLmo
9QhMMcLqZV9WvOsRmGKYekO83m89AlOMFvHS6qmafwTmcqRcfNg6GvAKTAma
1CMDbb5ZgSlFyLWN7pOlc0LTdKzzhuE5DBzerZ1PDeKGQ/NJjnUuaRk3Eu3W
/XbT9mCuHH9/+qv8qEPCjYKhyzWY0iPFMctrRfJxJYo/trvzPgjjxiB6c8jl
qBkZNxYT8mmZuGkFV4V9h7P664PDuXGY0JRKSuojuPGI+WZ4Yrs8kpuAbY9P
+eePruSuwXH1JddXRjk3EdVl7beuX3+Jq0HuTl9F7etR6DkfSL2k0iGq4EDr
prsKtPZ+t/Hkvzp4a/Kqfjqn5Orx4/Dcjucbo7lJaFA09TfnxnAJzljG1a+E
xnKTke8322STsdxk1FQ4TquOr+KuQ7l4d0Hp2ypuCqZkXaPfr1ZzDbjhbS7c
MaPmGpBmaemTX4jjGlE54Hxnyd547nro/Qqiz1zNNcF+7q+hUlkC14zwVz+s
eTyWwDWjfXrC1deyhpuKtqCCwtq31nI3QPqoO/+zFxO5aVhaJJaen0nkpsHZ
rb0X/YWGK2DAZ4gecmhxK9DpKkoGzH+slZjkOmYnkJ+sPJJSpWMGgP5M5TLz
nzpmcTr8v4S9vDVLzxxJx9PfirO7evTM+AyYOods7tAkZmsGjFf27tryURLT
kwHFHmPGnR+SmJZM0Lu+B2XrCPPrTMQNrjwdf4gwwyn22zYvH28nzAiKB+7G
krojhBlJcTbUo7zZSZhyClPBlUMNJwgzhsLiL6ubPEOYWgqn5qq1bZQwsylu
Xg46K1wlzE0U620G6f1rhJlD8azqxHD6GGG+QdE8sif14c+EuYWic5tKnT1F
mPbFv29rw+w0YZZQFB5w3f7cTZgOilV9gQ7ffcJ8n6J3YSy020uYZRRhB4N3
5j4iTCdFuXrDaGCWMHdRGHN6Gq1PCLOCouP273fmnxJmJcV8+Qrh1BxhVi/2
g7OO5T0jzFqKwY7aJwsLhFlH8R86ohrn
           "]]}, 
         Annotation[#, 
          "Charting`Private`Tag$19404#2"]& ]}}, {}, {}}, {{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         PointBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7Fu+zd64K0vOASrgkLCsU4BXWRzK53DoU7uS
89lDCcoXcIjSCMnWei8I5Ys4lM8REz6srwLlSzhsib7Dt2WnGpQv46B1nKnw
R5kelK/g8Gxx1SOpAiMoX8kh9cbbSU0imlC+ikMko/BKeRVjKF/N4Xl/jqHT
IQsoX8Nhyx6HjQaxtlC+lsNFrUbLx63WUL6OQxcT/4nIs05Qvp5DiJlny9FI
mH4Dh3s7d03W/W8P5Rs6vHzEv3rOF5h6IweLjAU92RdhfGOHx7HHl8xbAuOb
OBy/Iay8rMnFAQAeUU8d
          "]]}, {}}}, {}, {}, {}, {}}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {1, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {1., 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{1, 20}, {0., 41.08031922788653}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"\[Alpha]e", "+", 
         RowBox[{"\[Beta]e", " ", "x"}]}], 
       RowBox[{"\[Alpha]", "+", 
         RowBox[{"\[Beta]", " ", "x"}]}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.770719393153343*^9, 3.770719412391088*^9}, 
   3.770719617064081*^9, 3.770728253306492*^9, 3.770966362807413*^9, 
   3.770977278406637*^9, 
   3.770978187390832*^9},ExpressionUUID->"5d6bafd0-f3a6-45c5-b450-\
9d5f85814cbc"],

Cell[BoxData["\<\"~/GitHub/MathematicaStan/figures/linRegEstimate.png\"\>"], \
"Output",
 CellChangeTimes->{{3.770719393153343*^9, 3.770719412391088*^9}, 
   3.770719617064081*^9, 3.770728253306492*^9, 3.770966362807413*^9, 
   3.770977278406637*^9, 
   3.770978187537592*^9},ExpressionUUID->"d1808916-a9a3-4c5d-9c05-\
ddb139003b01"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Run Stan: \[OpenCurlyDoubleQuote]method=Variational\
\[CloseCurlyDoubleQuote]", "Subchapter",
 CellChangeTimes->{{3.7707172589905663`*^9, 3.770717262142745*^9}, {
  3.7707174423507767`*^9, 3.7707174708309317`*^9}, {3.770717515239135*^9, 
  3.7707175250468483`*^9}, {3.770724653528404*^9, 
  3.770724657775475*^9}},ExpressionUUID->"e0650e4e-8e5c-4d02-b01a-\
39eda7d06c19"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"myOpt", "=", "VariationalDefaultOptions"}]], "Input",
 CellChangeTimes->{{3.770725056572152*^9, 
  3.770725067106368*^9}},ExpressionUUID->"f38014c5-34a9-47ab-952c-\
5fd8f2fd979c"],

Cell[BoxData["\<\"method=variational \"\>"], "Output",
 CellChangeTimes->{3.770725068251993*^9, 3.770728260545175*^9, 
  3.7709663630920067`*^9, 3.770977278807928*^9, 
  3.770978187549203*^9},ExpressionUUID->"63bfda8f-1f5d-4226-bc4b-\
ee105001d7a5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"myOpt", "=", 
  RowBox[{"SetStanOption", "[", 
   RowBox[{"myOpt", ",", "\"\<output.file\>\"", ",", 
    RowBox[{"FileNameJoin", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Directory", "[", "]"}], ",", "\"\<myOutputFile.csv\>\""}], 
      "}"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.770725657362035*^9, 3.770725672898519*^9}, {
  3.770726008603207*^9, 
  3.770726087225382*^9}},ExpressionUUID->"d9185ff5-7af0-43d3-9dcd-\
b21be2eaab78"],

Cell[BoxData["\<\"method=variational output file=/tmp/myOutputFile.csv \
\"\>"], "Output",
 CellChangeTimes->{
  3.770726088195011*^9, 3.7707282619130096`*^9, 3.770729895368061*^9, 
   3.770966363133918*^9, {3.7709772788174467`*^9, 3.7709773034911833`*^9}, 
   3.770978187591846*^9},ExpressionUUID->"6619f728-9e01-4ca4-aab0-\
afa9de9ff271"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"myOpt", "=", 
  RowBox[{"SetStanOption", "[", 
   RowBox[{"myOpt", ",", "\"\<method.adapt.iter\>\"", ",", "123"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.770726272990141*^9, 
  3.770726272993618*^9}},ExpressionUUID->"d278d42d-fffa-44c8-be15-\
817597f66ba1"],

Cell[BoxData["\<\"method=variational adapt iter=123 output \
file=/tmp/myOutputFile.csv \"\>"], "Output",
 CellChangeTimes->{
  3.770726275278192*^9, 3.77072729979276*^9, {3.770727338544113*^9, 
   3.770727355664179*^9}, 3.770727998051745*^9, 3.770728262842842*^9, 
   3.7707298964512157`*^9, 3.770966363184308*^9, {3.770977278855837*^9, 
   3.770977304640045*^9}, 
   3.770978187639118*^9},ExpressionUUID->"aacfda5f-7b89-46b4-8b41-\
ff610ae337e8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GetStanOption", "[", 
  RowBox[{"myOpt", ",", "\"\<method.adapt.iter\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.7707263557968473`*^9, 
  3.770726355800302*^9}},ExpressionUUID->"b32bf824-6875-4979-9062-\
0fa6c45452de"],

Cell[BoxData["123"], "Output",
 CellChangeTimes->{
  3.770726357093905*^9, 3.770728264971861*^9, 3.7707298990116673`*^9, 
   3.77096636345061*^9, {3.770977278893066*^9, 3.770977305557496*^9}, 
   3.770978187728714*^9},ExpressionUUID->"f207df6b-865b-43d0-94b2-\
1fdfadce01a0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"myOpt", "=", 
  RowBox[{"RemoveStanOption", "[", 
   RowBox[{"myOpt", ",", "\"\<method.adapt.iter\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.770727238515027*^9, 3.770727279026613*^9}, {
  3.770727365772388*^9, 
  3.770727366699054*^9}},ExpressionUUID->"8cd00d13-fe1e-4685-8bd8-\
b4b50817326e"],

Cell[BoxData["\<\"method=variational output file=/tmp/myOutputFile.csv \
\"\>"], "Output",
 CellChangeTimes->{{3.770727249510687*^9, 3.77072728009289*^9}, {
   3.7707273476156597`*^9, 3.770727367931439*^9}, 3.7707280212988443`*^9, 
   3.770728268768956*^9, 3.770729901319879*^9, 3.770966363460731*^9, {
   3.770977278933132*^9, 3.770977306375332*^9}, 
   3.770978187780102*^9},ExpressionUUID->"a3480c90-1032-4335-b8ee-\
03ea40552306"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"myOutputFile", "=", 
  RowBox[{"RunStan", "[", 
   RowBox[{"stanExeFile", ",", "myOpt", ",", 
    RowBox[{"StanVerbose", "\[Rule]", "False"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.770729976800931*^9, 3.77072998259805*^9}, 
   3.770730255312337*^9, {3.770730292335322*^9, 
   3.770730293950549*^9}},ExpressionUUID->"72b3cfd8-3711-4643-ae7d-\
b4e8cbc866ed"],

Cell[BoxData["\<\"/tmp/myOutputFile.csv\"\>"], "Output",
 CellChangeTimes->{
  3.770729933667616*^9, 3.7707299833273582`*^9, 3.770730256510042*^9, 
   3.770730294867652*^9, 3.7709663635501423`*^9, {3.770977279043879*^9, 
   3.770977308193561*^9}, 
   3.7709781879042673`*^9},ExpressionUUID->"54b18edc-7a64-4bd1-a2d8-\
0565b44d9422"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"myResult", "=", 
  RowBox[{"ImportStanResult", "[", "myOutputFile", "]"}]}]], "Input",
 CellChangeTimes->{{3.770730243080822*^9, 
  3.7707303000628643`*^9}},ExpressionUUID->"86437ec0-d003-4c24-a519-\
ecc2ea77ca62"],

Cell[BoxData["\<\"     file: /tmp/myOutputFile.csv\\n     meta: lp__ , \
log_p__ , log_g__ \\nparameter: alpha , beta , sigma \"\>"], "Output",
 CellChangeTimes->{3.7707302730907707`*^9, 3.7707303058553667`*^9, 
  3.770966363615232*^9, 3.7709685288410997`*^9, 3.770968591302024*^9, 
  3.77097727905649*^9, 3.7709773098807507`*^9, 
  3.770978187964859*^9},ExpressionUUID->"2b5972c1-df50-4b44-8ded-\
d87da1f6756a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"GetStanResult", "[", 
  RowBox[{"Mean", ",", "myResult", ",", "\"\<alpha\>\""}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"GetStanResult", "[", 
  RowBox[{"Variance", ",", "myResult", ",", "\"\<alpha\>\""}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"GetStanResult", "[", 
  RowBox[{"Histogram", ",", "myResult", ",", "\"\<alpha\>\""}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.770730404418454*^9, 3.77073046196732*^9}, {
  3.770979977781748*^9, 
  3.770980016876946*^9}},ExpressionUUID->"870d3ff0-4552-41e1-8db3-\
ef413add9615"],

Cell[BoxData["1.3552392414285688`"], "Output",
 CellChangeTimes->{{3.770979971896656*^9, 
  3.7709800174573593`*^9}},ExpressionUUID->"7c413ab5-91af-4b0d-95ac-\
e9a1637e7bfe"],

Cell[BoxData["0.8695782614843807`"], "Output",
 CellChangeTimes->{{3.770979971896656*^9, 
  3.770980017460586*^9}},ExpressionUUID->"691abd0e-3d2c-499c-82f1-\
354422cb157b"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.469], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.469], Thickness[Small]}], RectangleBox[{-2., 0}, {-1.8, 1.},
      RoundingRadius->0], RectangleBox[{-1.8, 0}, {-1.6, 1.},
      RoundingRadius->0], RectangleBox[{-1.6, 0}, {-1.4, 1.},
      RoundingRadius->0], RectangleBox[{-1.4, 0}, {-1.2, 1.},
      RoundingRadius->0], RectangleBox[{-1.2, 0}, {-1., 3.},
      RoundingRadius->0], RectangleBox[{-1., 0}, {-0.8, 8.},
      RoundingRadius->0], RectangleBox[{-0.8, 0}, {-0.6, 8.},
      RoundingRadius->0], RectangleBox[{-0.6, 0}, {-0.4, 10.},
      RoundingRadius->0], RectangleBox[{-0.4, 0}, {-0.2, 16.},
      RoundingRadius->0], RectangleBox[{-0.2, 0}, {0., 26.},
      RoundingRadius->0], RectangleBox[{0., 0}, {0.2, 33.},
      RoundingRadius->0], RectangleBox[{0.2, 0}, {0.4, 44.},
      RoundingRadius->0], RectangleBox[{0.4, 0}, {0.6, 50.},
      RoundingRadius->0], RectangleBox[{0.6, 0}, {0.8, 65.},
      RoundingRadius->0], RectangleBox[{0.8, 0}, {1., 83.},
      RoundingRadius->0], RectangleBox[{1., 0}, {1.2, 86.},
      RoundingRadius->0], RectangleBox[{1.2, 0}, {1.4, 83.},
      RoundingRadius->0], RectangleBox[{1.4, 0}, {1.6, 73.},
      RoundingRadius->0], RectangleBox[{1.6, 0}, {1.8, 80.},
      RoundingRadius->0], RectangleBox[{1.8, 0}, {2., 74.},
      RoundingRadius->0], RectangleBox[{2., 0}, {2.2, 66.},
      RoundingRadius->0], RectangleBox[{2.2, 0}, {2.4, 62.},
      RoundingRadius->0], RectangleBox[{2.4, 0}, {2.6, 34.},
      RoundingRadius->0], RectangleBox[{2.6, 0}, {2.8, 33.},
      RoundingRadius->0], RectangleBox[{2.8, 0}, {3., 22.},
      RoundingRadius->0], RectangleBox[{3., 0}, {3.2, 18.},
      RoundingRadius->0], RectangleBox[{3.2, 0}, {3.4, 12.},
      RoundingRadius->0], RectangleBox[{3.4, 0}, {3.6, 5.},
      RoundingRadius->0], RectangleBox[{3.6, 0}, {3.8, 2.},
      RoundingRadius->0], RectangleBox[{4., 0}, {4.2, 1.},
      RoundingRadius->
       0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-2.124, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{-2., 4.2}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.770979971896656*^9, 
  3.770980017580576*^9}},ExpressionUUID->"2ff13a02-6e5e-44ad-b604-\
24cd7ac850cc"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell["", "Chapter",ExpressionUUID->"ceb923f4-3c88-4c64-9575-3123e2b69553"],

Cell[CellGroupData[{

Cell["Linear regression, more than one predictor", "Chapter",
 CellChangeTimes->{{3.7709811122804747`*^9, 
  3.770981130614051*^9}},ExpressionUUID->"fa298fa5-3a74-4717-b0b4-\
9aeeec3c06ac"],

Cell[CellGroupData[{

Cell["Stan code", "Subchapter",
 CellChangeTimes->{{3.770981059501787*^9, 
  3.770981060957796*^9}},ExpressionUUID->"0fa28b2a-7c7f-4d04-90ad-\
8396e0c76133"],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "stanCode", "=", 
   "\"\<data {\n  int<lower=0> N;   // number of data items\n  int<lower=0> \
K;   // number of predictors\n  matrix[N, K] x;   // predictor matrix\n  \
vector[N] y;      // outcome vector\n}\nparameters {\n  real alpha;           \
// intercept\n  vector[K] beta;       // coefficients for predictors\n  \
real<lower=0> sigma;  // error scale\n}\nmodel {\n  y ~ normal(x * beta + \
alpha, sigma);  // likelihood\n}\>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.7709801763110037`*^9, 3.770980213654079*^9}, {
   3.7709802709990387`*^9, 3.770980310397904*^9}, 
   3.770981221942471*^9},ExpressionUUID->"5cb2c54d-6f85-4ec6-a213-\
7ac8956729b3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"stanCodeFile", "=", 
   RowBox[{"ExportStanCode", "[", 
    RowBox[{"\"\<linear_regression_vect.stan\>\"", ",", "stanCode"}], "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"stanExeFile", " ", "=", " ", 
   RowBox[{"CompileStanCode", "[", 
    RowBox[{"stanCodeFile", ",", 
     RowBox[{"StanVerbose", "\[Rule]", "False"}]}], "]"}]}], ";"}]}], "Input",\

 CellChangeTimes->{{3.770980316237467*^9, 3.770980334301318*^9}, 
   3.770980644485837*^9, {3.770981222843774*^9, 
   3.770981225291337*^9}},ExpressionUUID->"f2f789d6-693d-4515-9c84-\
6d16e23b5b3d"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Generate data", "Subchapter",
 CellChangeTimes->{{3.770981051981976*^9, 
  3.770981053965992*^9}},ExpressionUUID->"b63cfa1f-84b9-4308-9432-\
54303fad55a0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Sigma]", "=", "3"}], ";", 
  RowBox[{"\[Alpha]", "=", "1"}], ";", 
  RowBox[{"\[Beta]1", "=", "2"}], ";", 
  RowBox[{"\[Beta]2", "=", "0.1"}], ";", 
  RowBox[{"\[Beta]3", "=", "0.01"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", "=", "20"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"X", "=", 
   RowBox[{"Range", "[", "n", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Y", "=", 
   RowBox[{"\[Alpha]", "+", 
    RowBox[{"\[Beta]1", "*", "X"}], "+", 
    RowBox[{"\[Beta]2", "*", 
     RowBox[{"X", "^", "2"}]}], "+", 
    RowBox[{"\[Beta]3", "*", 
     RowBox[{"X", "^", "3"}]}], "+", 
    RowBox[{"RandomVariate", "[", 
     RowBox[{
      RowBox[{"NormalDistribution", "[", 
       RowBox[{"0", ",", "\[Sigma]"}], "]"}], ",", "n"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"\[Alpha]", "+", 
       RowBox[{"\[Beta]1", "*", "x"}], "+", 
       RowBox[{"\[Beta]2", "*", 
        RowBox[{"x", "^", "2"}]}], "+", 
       RowBox[{"\[Beta]3", "*", 
        RowBox[{"x", "^", "3"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"Min", "[", "X", "]"}], ",", 
        RowBox[{"Max", "[", "X", "]"}]}], "}"}]}], "]"}], ",", 
    RowBox[{"ListPlot", "[", 
     RowBox[{
      RowBox[{"Transpose", "@", 
       RowBox[{"{", 
        RowBox[{"X", ",", "Y"}], "}"}]}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.770710743992337*^9, 3.770710844599894*^9}, {
  3.770710986906942*^9, 3.77071122661648*^9}, {3.770715628426827*^9, 
  3.770715652126151*^9}, {3.770715700797555*^9, 3.770715735013671*^9}, {
  3.77072823119751*^9, 3.770728231580427*^9}, {3.77098068827894*^9, 
  3.770980691822667*^9}, {3.770980796695024*^9, 3.7709808159184923`*^9}, {
  3.770980872847966*^9, 3.770980936750819*^9}, {3.770982686553887*^9, 
  3.770982730472774*^9}, {3.770982836282587*^9, 3.770982841536681*^9}, {
  3.770982945625558*^9, 3.770982946913781*^9}, {3.770984725773747*^9, 
  3.770984842419343*^9}},ExpressionUUID->"117ea801-5184-4f14-b3e1-\
0b695c0197bc"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJwVknk01AkAxycdhkZmNpRGxjmTm/lZ7LDmW5EQM02UrTD1G97UI/soixy1
JKWVlZzreNXs08saK0ttbJtCzZZZHa4tx8qRLkeuXGv/+L7PP5//Pl/DwxGi
EBUKheKzvP85sEdHSqGM8tuMjI129lFhy/K/3b1hlN+omIwamqMibuSSer3N
KN/N5YA0XUcN9NOMX2KDR/lrnV35fd5q4FXQxsf/GOWz+1SePqhRQwZ1ZfxA
whg/rjBmNOwHdTjUf7yomBvnSzjXnHa50pDKflSbPT3Jr8g6xi2t0ATticfw
zxHz/F7XxcJ71etRmxtts+CyAjF5wVf6EzfA+pSPaJ67ClJP2dkSCRM5ovMh
vCOqkH/e3drYxsL777uY+VJ1VDtWmEg3GcGxKLPBoUwD9mvrEnPyTEB+FzLs
F0aHrK48TWnFgaGAdk//DQNy89/F3rVm6GAOMqip62F+d/WTzUWWOJvrWX1a
VRtlE50hV6Nt0GEdoR56WgfluudraYQdjO40dxxhbsTR3fLisR4uJFPXZxby
ddES1K4znGKPEvbdzF+dmHgYqt2tlDggPjLnpVKpBxPRupFmPycIw6djE731
cY5JXXeQx4N+YPrFXUMslJrH+WmTLhhP8Dv54qYB6H3KeMEpVzxtnj+qlWKI
SPeu4htRQDIrtTpNaITQw/A4W7kVct/nbHdNY/zNpZ8aHtiGgBlnf0a3McbX
3Ghpd3NDQqy03LTEBLaNWmaJhe6IokYHRhw0xSaD35J7Z3dggFGkeGjGxoeA
NT1XU3fi2Xia+OgbNlpuHcuaoHrB1TejinmbAw792tqSem/E1R4PUjmzBday
YNpSvA/sZliE3XYzTHm9UB6yESDk5uv7EQxzjCncZxUXhNDecSxhqtUc4TaC
IEXcbuQMdmRWZVjgQYvqhXdhImSvCBQnHrCE915/XmPCHmh8kgVkbbKCHu2L
IrVUP6w8RNWoeWOFhLroKD+5P47LbEYMb1hDmPtM5qvci9ppR8P7UhtY1lg8
/nFiH5z/tVTnMW2hlXYTH5y/QYC9QZ7DSVuEWcc1b43dj+rtBquc+20x011s
5fjqAGY66Zv3e9qh4EzXCMcjEJ//Ib2KyuzQ39k9ZnwtCLzC+/7DmlzMRESv
uawthlPTmRP7vuXiYkCNlelTMVgxTtv6WrhI0oriNWQegtvQ9LvILwmMWC29
ZC1H4jTolm+5TMAjWxAcT5A47y9Qe55D4PUnbz7LkcS74ZTQpDxi+e8f8xt4
JCo1Rw3aCgmcIIV31beR4AU2XU6+QkBoGvlXqZCE70xkUrecQLGL6lh/OInj
1o9F2QoCmV2L8qYyEm33VlTyHxPIN+VOxZST+MrfUePtEwLr0s1vWVSSWDx5
pXlrKwETcYY8q5ZE2qMYl4/tBM4J9MJDm0gUSkzZXgMEAjlGFqavl/3p/cmT
gwTmKO12PUMkxOmZvaXDBOp6e6rz35IwqZormH5LIDucYUufIFGx1KopGydg
3/l+TkVFAvol1XDhJwKRlK8H/1wtQRT7a8XcJIGqqxyfJDUJnHzKUkSzBPR1
JzIX6BIU9L7qW/hMoOHhQHi9lgQLUev51+cJ7JPnNidslECs6vmT3yKBnDuM
Ylc9CRoKEmeXlgg4vTw4tsSS4D/WRyPn
        "]]},
      Annotation[#, "Charting`Private`Tag$22818#1"]& ]}, {}, {}}, {{}, {{}, 
     {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], AbsoluteThickness[
      1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7Mu9WmQyjBgdoAIOn5ocYk/oCkH5HA4G7IXa
8999sofwBRy6Le/q2303hMqLOHzNMe6ukTeA8iUcjLoNQ1WnmkD5Mg6TVAXS
jt21hfIVHGLO/rrcZAvjKzkc8X4kn1ZmB+WrOGi8WZgepuUG5as59F3z2b54
iQeUr+FgtmFLgudhXyhfy6FcaPeNhAY/KF/H4d5ddxl/9RAoX8/BzePNgvRb
YVC+gQPPUstGI81IKN/QQcGj7mVVdAyUb+Qw7dpC7Zzj8VC+scMaxx+syz8k
QvkmDq8CU027XFIcAA9HTgI=
       "]]}, {}}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{1, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{1, 20}, {0., 160.99999302040828`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.770980816451704*^9, {3.770980876550622*^9, 3.770980937854656*^9}, 
   3.770981232187209*^9, 3.7709818120169973`*^9, {3.7709827052222643`*^9, 
   3.770982731290283*^9}, 3.770982947711351*^9, 3.770984843300405*^9, {
   3.7709849111415167`*^9, 3.7709849488833323`*^9}, 3.770984983611664*^9, 
   3.7709854661322927`*^9},ExpressionUUID->"1590db9f-a031-46bc-a4a0-\
29b76758c468"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<~/GitHub/MathematicaStan/figures/linReg2Data.png\>\"", ",", "%"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.770981815023303*^9, 
  3.770981820943388*^9}},ExpressionUUID->"4116d0a9-795c-45f0-8d16-\
a3c9771b1d0e"],

Cell[BoxData["\<\"~/GitHub/MathematicaStan/figures/linReg2Data.png\"\>"], \
"Output",
 CellChangeTimes->{
  3.77098182207001*^9},ExpressionUUID->"47a7e4d0-688d-4139-8679-3ec8bb5739c6"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Export data", "Subchapter",
 CellChangeTimes->{{3.770981189390119*^9, 
  3.770981190886017*^9}},ExpressionUUID->"a7a21759-a845-4fa0-a5f1-\
ae05849a8e26"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"stanData", "=", 
   RowBox[{"<|", 
    RowBox[{
     RowBox[{"\"\<N\>\"", "\[Rule]", "n"}], ",", 
     RowBox[{"\"\<K\>\"", "\[Rule]", "3"}], ",", 
     RowBox[{"\"\<x\>\"", "\[Rule]", 
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{"X", ",", 
         RowBox[{"X", "^", "2"}], ",", 
         RowBox[{"X", "^", "3"}]}], "}"}], "]"}]}], ",", 
     RowBox[{"\"\<y\>\"", "\[Rule]", "Y"}]}], "|>"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"stanDataFile", "=", 
  RowBox[{"ExportStanData", "[", 
   RowBox[{"stanExeFile", ",", "stanData"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.770716148118916*^9, 3.770716154549657*^9}, {
   3.770716712246912*^9, 3.770716775014164*^9}, {3.770982627050706*^9, 
   3.7709826467124233`*^9}, {3.7709827559055634`*^9, 3.77098275796879*^9}, {
   3.770982961993814*^9, 3.770982965121057*^9}, 3.7709840456214542`*^9, {
   3.770985457571993*^9, 
   3.7709854632438087`*^9}},ExpressionUUID->"51c4635b-abfd-4b71-8b9f-\
9caf476a60ab"],

Cell[BoxData["\<\"/tmp/linear_regression_vect.data.R\"\>"], "Output",
 CellChangeTimes->{
  3.770716775878848*^9, {3.770728223184442*^9, 3.770728237838388*^9}, 
   3.770966360475802*^9, 3.770977277896429*^9, 3.770978186712336*^9, 
   3.770982600651177*^9, 3.770982647362574*^9, {3.770982742940584*^9, 
   3.7709827586673517`*^9}, 3.77098296560316*^9, {3.770985463770876*^9, 
   3.7709854756948547`*^9}},ExpressionUUID->"1705f5a6-6a61-4745-8282-\
a37a23cfdb9a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Run Stan: \
\[OpenCurlyDoubleQuote]method=Sample\[CloseCurlyDoubleQuote]", "Subchapter",
 CellChangeTimes->{{3.7707172589905663`*^9, 3.770717262142745*^9}, {
  3.7707174423507767`*^9, 3.7707174708309317`*^9}, {3.770717515239135*^9, 
  3.7707175250468483`*^9}, {3.770982602799897*^9, 
  3.770982605799835*^9}},ExpressionUUID->"ef49e676-75e9-44c1-b9d8-\
ea5b8396aec6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"stanResultFile", "=", 
  RowBox[{"RunStan", "[", 
   RowBox[{"stanExeFile", ",", "SampleDefaultOptions"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.770717356769566*^9, 3.770717395374997*^9}, {
  3.770717431687707*^9, 3.770717433687216*^9}, {3.770717487943592*^9, 
  3.770717502215275*^9}, {3.770982611944193*^9, 
  3.770982614504066*^9}},ExpressionUUID->"ad2723e9-0b96-497e-9ab4-\
cee33bac8a64"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Running: \"\>", 
   "\[InvisibleSpace]", "\<\"/tmp/linear_regression_vect method=sample data \
file=/tmp/linear_regression_vect.data.R output \
file=/tmp/linear_regression_vect.csv\"\>"}],
  SequenceForm[
  "Running: ", 
   "/tmp/linear_regression_vect method=sample data \
file=/tmp/linear_regression_vect.data.R output \
file=/tmp/linear_regression_vect.csv"],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.7707175031528788`*^9, 3.770728239952798*^9, 3.7709663605259533`*^9, 
   3.7709772779347258`*^9, 3.770978186774683*^9, 3.770982615459422*^9, 
   3.770982650215082*^9, {3.770982745423832*^9, 3.770982760191675*^9}, 
   3.770982968341394*^9, 
   3.770985477519244*^9},ExpressionUUID->"1f62e0c5-a966-42ca-8ce4-\
e349c3f5abf9"],

Cell[BoxData["\<\"method = sample (Default)\\n  sample\\n    num_samples = \
1000 (Default)\\n    num_warmup = 1000 (Default)\\n    save_warmup = 0 \
(Default)\\n    thin = 1 (Default)\\n    adapt\\n      engaged = 1 \
(Default)\\n      gamma = 0.050000000000000003 (Default)\\n      delta = \
0.80000000000000004 (Default)\\n      kappa = 0.75 (Default)\\n      t0 = 10 \
(Default)\\n      init_buffer = 75 (Default)\\n      term_buffer = 50 \
(Default)\\n      window = 25 (Default)\\n    algorithm = hmc (Default)\\n    \
  hmc\\n        engine = nuts (Default)\\n          nuts\\n            \
max_depth = 10 (Default)\\n        metric = diag_e (Default)\\n        \
metric_file =  (Default)\\n        stepsize = 1 (Default)\\n        \
stepsize_jitter = 0 (Default)\\nid = 0 (Default)\\ndata\\n  file = \
/tmp/linear_regression_vect.data.R\\ninit = 2 (Default)\\nrandom\\n  seed = \
3043713420\\noutput\\n  file = /tmp/linear_regression_vect.csv\\n  \
diagnostic_file =  (Default)\\n  refresh = 100 (Default)\\n\\n\\nGradient \
evaluation took 4e-05 seconds\\n1000 transitions using 10 leapfrog steps per \
transition would take 0.4 seconds.\\nAdjust your expectations accordingly!\\n\
\\n\\nIteration:    1 / 2000 [  0%]  (Warmup)\\nIteration:  100 / 2000 [  5%] \
 (Warmup)\\nIteration:  200 / 2000 [ 10%]  (Warmup)\\nIteration:  300 / 2000 \
[ 15%]  (Warmup)\\nIteration:  400 / 2000 [ 20%]  (Warmup)\\nIteration:  500 \
/ 2000 [ 25%]  (Warmup)\\nIteration:  600 / 2000 [ 30%]  \
(Warmup)\\nIteration:  700 / 2000 [ 35%]  (Warmup)\\nIteration:  800 / 2000 [ \
40%]  (Warmup)\\nIteration:  900 / 2000 [ 45%]  (Warmup)\\nIteration: 1000 / \
2000 [ 50%]  (Warmup)\\nIteration: 1001 / 2000 [ 50%]  \
(Sampling)\\nIteration: 1100 / 2000 [ 55%]  (Sampling)\\nIteration: 1200 / \
2000 [ 60%]  (Sampling)\\nIteration: 1300 / 2000 [ 65%]  \
(Sampling)\\nIteration: 1400 / 2000 [ 70%]  (Sampling)\\nIteration: 1500 / \
2000 [ 75%]  (Sampling)\\nIteration: 1600 / 2000 [ 80%]  \
(Sampling)\\nIteration: 1700 / 2000 [ 85%]  (Sampling)\\nIteration: 1800 / \
2000 [ 90%]  (Sampling)\\nIteration: 1900 / 2000 [ 95%]  \
(Sampling)\\nIteration: 2000 / 2000 [100%]  (Sampling)\\n\\n Elapsed Time: \
0.740037 seconds (Warm-up)\\n               0.60785 seconds (Sampling)\\n     \
          1.34789 seconds (Total)\\n\\n\"\>"], "Print",
 CellChangeTimes->{
  3.7707175031528788`*^9, 3.770728239952798*^9, 3.7709663605259533`*^9, 
   3.7709772779347258`*^9, 3.770978186774683*^9, 3.770982615459422*^9, 
   3.770982650215082*^9, {3.770982745423832*^9, 3.770982760191675*^9}, 
   3.770982968341394*^9, 
   3.770985478877158*^9},ExpressionUUID->"b935d509-76ca-44a5-aa3e-\
eb01f384d5bc"]
}, Open  ]],

Cell[BoxData["\<\"/tmp/linear_regression_vect.csv\"\>"], "Output",
 CellChangeTimes->{
  3.7709826154710197`*^9, 3.770982650222556*^9, {3.7709827454317503`*^9, 
   3.770982760202839*^9}, 3.770982970013042*^9, 
   3.770985478880024*^9},ExpressionUUID->"cdfd8fa5-93bb-4d92-8df8-\
52cb007623ff"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Load the CSV file", "Subchapter",
 CellChangeTimes->{{3.7709856146992903`*^9, 3.770985615883224*^9}, {
  3.7709856880194063`*^9, 
  3.770985693179284*^9}},ExpressionUUID->"8ced059e-2ccb-423d-9d6e-\
9b783f792d63"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"stanResult", "=", 
  RowBox[{"ImportStanResult", "[", "stanResultFile", "]"}]}]], "Input",
 CellChangeTimes->{{3.7709856854121237`*^9, 
  3.7709857215637417`*^9}},ExpressionUUID->"aaf156fe-2a03-4fdb-9920-\
7bd0a54abb0b"],

Cell[BoxData["\<\"     file: /tmp/linear_regression_vect.csv\\n     meta: \
lp__ , accept_stat__ , stepsize__ , treedepth__ , n_leapfrog__ , divergent__ \
, energy__ \\nparameter: alpha , beta 3, sigma \"\>"], "Output",
 CellChangeTimes->{{3.770985695930901*^9, 
  3.7709857222083187`*^9}},ExpressionUUID->"2e12ee4d-d136-41c0-b393-\
d79bc9923d8f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"\[Beta]1e", ",", "\[Beta]2e", ",", "\[Beta]3e"}], "}"}], "=", 
  RowBox[{"GetStanResult", "[", 
   RowBox[{"Mean", ",", "stanResult", ",", "\"\<beta\>\""}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.770986464831616*^9, 
  3.7709864664929247`*^9}},ExpressionUUID->"fe384450-d5e2-42ef-a561-\
0dae0398d6cd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3.3032081607`", ",", 
   RowBox[{"-", "0.010087953683`"}], ",", "0.012691305083`"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.770986467056567*^9},ExpressionUUID->"e0ac5a91-4b7e-4105-9cd1-\
67e45be7f48c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"\[Alpha]e", ",", 
    RowBox[{"{", 
     RowBox[{"\[Beta]1e", ",", "\[Beta]2e", ",", "\[Beta]3e"}], "}"}]}], 
   "}"}], "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"GetStanResult", "[", 
     RowBox[{"Mean", ",", "stanResult", ",", "\"\<alpha\>\""}], "]"}], ",", 
    RowBox[{"GetStanResult", "[", 
     RowBox[{"Mean", ",", "stanResult", ",", "\"\<beta\>\""}], "]"}]}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.770986064975194*^9, 3.770986074452052*^9}, {
  3.7709862544225492`*^9, 3.770986255524598*^9}, {3.770986368325992*^9, 
  3.770986439892705*^9}},ExpressionUUID->"69f96883-f2a1-4b27-b639-\
7cc3235d50ef"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "1.9972500570399985`"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.3032081607`", ",", 
     RowBox[{"-", "0.010087953683`"}], ",", "0.012691305083`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.77098607502597*^9, 3.770986256345315*^9, 
  3.770986442963496*^9},ExpressionUUID->"2568bb31-227f-4b23-9406-\
d522a3fa3340"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p", "=", 
  RowBox[{"GraphicsRow", "[", 
   RowBox[{"GetStanResult", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Histogram", "[", 
       RowBox[{"#", ",", 
        RowBox[{"ImageSize", "\[Rule]", "200"}]}], "]"}], "&"}], ",", 
     "stanResult", ",", "\"\<beta\>\""}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.770986263748452*^9, 3.77098629730846*^9}, {
  3.770986596886292*^9, 3.770986597141034*^9}, {3.7709866367266006`*^9, 
  3.770986639069025*^9}, {3.7709866888630447`*^9, 
  3.770986723221644*^9}},ExpressionUUID->"d127a790-7232-4bab-878b-\
4883885ca4e1"],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     GraphicsBox[{
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.518], Thickness[Small]}], {}, 
        {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
         EdgeForm[{Opacity[0.518], Thickness[Small]}], 
         RectangleBox[{-2.5, 0}, {-2., 2.},
          RoundingRadius->0], RectangleBox[{-1.5, 0}, {-1., 4.},
          RoundingRadius->0], RectangleBox[{-1., 0}, {-0.5, 7.},
          RoundingRadius->0], RectangleBox[{-0.5, 0}, {0., 8.},
          RoundingRadius->0], RectangleBox[{0., 0}, {0.5, 19.},
          RoundingRadius->0], RectangleBox[{0.5, 0}, {1., 35.},
          RoundingRadius->0], RectangleBox[{1., 0}, {1.5, 68.},
          RoundingRadius->0], RectangleBox[{1.5, 0}, {2., 98.},
          RoundingRadius->0], RectangleBox[{2., 0}, {2.5, 104.},
          RoundingRadius->0], RectangleBox[{2.5, 0}, {3., 114.},
          RoundingRadius->0], RectangleBox[{3., 0}, {3.5, 95.},
          RoundingRadius->0], RectangleBox[{3.5, 0}, {4., 106.},
          RoundingRadius->0], RectangleBox[{4., 0}, {4.5, 96.},
          RoundingRadius->0], RectangleBox[{4.5, 0}, {5., 80.},
          RoundingRadius->0], RectangleBox[{5., 0}, {5.5, 57.},
          RoundingRadius->0], RectangleBox[{5.5, 0}, {6., 44.},
          RoundingRadius->0], RectangleBox[{6., 0}, {6.5, 18.},
          RoundingRadius->0], RectangleBox[{6.5, 0}, {7., 13.},
          RoundingRadius->0], RectangleBox[{7., 0}, {7.5, 17.},
          RoundingRadius->0], RectangleBox[{7.5, 0}, {8., 9.},
          RoundingRadius->0], RectangleBox[{8., 0}, {8.5, 2.},
          RoundingRadius->0], RectangleBox[{8.5, 0}, {9., 3.},
          RoundingRadius->0], RectangleBox[{9., 0}, {9.5, 1.},
          
          RoundingRadius->
           0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{-2.74, 0},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->200,
      PlotRange->{{-2.5, 9.5}, {All, All}},
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {107.5, -64.89356881873896}, 
     ImageScaled[{0.5, 0.5}], {200, 123.60679774997895}], InsetBox[
     GraphicsBox[{
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.49699999999999994`], Thickness[Small]}], {}, 
        {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
         EdgeForm[{Opacity[0.49699999999999994`], Thickness[Small]}], 
         RectangleBox[{-0.8, 0}, {-0.75, 1.},
          RoundingRadius->0], RectangleBox[{-0.7, 0}, {-0.65, 1.},
          RoundingRadius->0], RectangleBox[{-0.6, 0}, {-0.55, 3.},
          RoundingRadius->0], RectangleBox[{-0.55, 0}, {-0.5, 5.},
          RoundingRadius->0], RectangleBox[{-0.5, 0}, {-0.45, 14.},
          RoundingRadius->0], RectangleBox[{-0.45, 0}, {-0.4, 10.},
          RoundingRadius->0], RectangleBox[{-0.4, 0}, {-0.35, 17.},
          RoundingRadius->0], RectangleBox[{-0.35, 0}, {-0.3, 21.},
          RoundingRadius->0], RectangleBox[{-0.3, 0}, {-0.25, 33.},
          RoundingRadius->0], RectangleBox[{-0.25, 0}, {-0.2, 56.},
          RoundingRadius->0], RectangleBox[{-0.2, 0}, {-0.15, 71.},
          RoundingRadius->0], RectangleBox[{-0.15, 0}, {-0.1, 73.},
          RoundingRadius->0], RectangleBox[{-0.1, 0}, {-0.05, 88.},
          RoundingRadius->0], RectangleBox[{-0.05, 0}, {0., 102.},
          RoundingRadius->0], RectangleBox[{0., 0}, {0.05, 97.},
          RoundingRadius->0], RectangleBox[{0.05, 0}, {0.1, 104.},
          RoundingRadius->0], RectangleBox[{0.1, 0}, {0.15, 96.},
          RoundingRadius->0], RectangleBox[{0.15, 0}, {0.2, 101.},
          RoundingRadius->0], RectangleBox[{0.2, 0}, {0.25, 43.},
          RoundingRadius->0], RectangleBox[{0.25, 0}, {0.3, 21.},
          RoundingRadius->0], RectangleBox[{0.3, 0}, {0.35, 13.},
          RoundingRadius->0], RectangleBox[{0.35, 0}, {0.4, 16.},
          RoundingRadius->0], RectangleBox[{0.4, 0}, {0.45, 8.},
          RoundingRadius->0], RectangleBox[{0.45, 0}, {0.5, 3.},
          RoundingRadius->0], RectangleBox[{0.5, 0}, {0.55, 3.},
          
          RoundingRadius->
           0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{-0.8270000000000001, 0},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->200,
      PlotRange->{{-0.8, 0.55}, {All, All}},
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {322.5, -64.89356881873896}, 
     ImageScaled[{0.5, 0.5}], {200, 123.60679774997895}], InsetBox[
     GraphicsBox[{
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.5249999999999999], Thickness[Small]}], {}, 
        {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
         EdgeForm[{Opacity[0.5249999999999999], Thickness[Small]}], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.006, 0}, {-0.004, 1.}, "RoundingRadius" -> 0]},
             
             
             ImageSizeCache->{{27.882501367635484`, 
              35.244335620774734`}, {-19.458888154134257`, \
-18.258952097689182`}}],
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.004, 0}, {-0.002, 10.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{34.744335620774734`, 
              42.10616987391404}, {-25.75831266213995, -18.258952097689182`}}],
            StatusArea[#, 10]& ,
            TagBoxNote->"10"],
           StyleBox["10", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[10, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{-0.002, 0}, {0., 9.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{41.60616987391404, 
              48.96800412705329}, {-25.058376605694875`, \
-18.258952097689182`}}],
            StatusArea[#, 9]& ,
            TagBoxNote->"9"],
           StyleBox["9", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[9, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0., 0}, {0.002, 12.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{48.46800412705329, 
              55.82983838019254}, {-27.158184775030108`, \
-18.258952097689182`}}],
            StatusArea[#, 12]& ,
            TagBoxNote->"12"],
           StyleBox["12", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[12, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.002, 0}, {0.004, 19.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{55.32983838019254, 
              62.69167263333185}, {-32.05773717014564, -18.258952097689182`}}],
            StatusArea[#, 19]& ,
            TagBoxNote->"19"],
           StyleBox["19", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[19, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.004, 0}, {0.006, 50.}, "RoundingRadius" -> 0]},
             ImageSizeCache->{{62.19167263333185, 
              69.5535068864711}, {-53.75575491994304, -18.258952097689182`}}],
            
            StatusArea[#, 50]& ,
            TagBoxNote->"50"],
           StyleBox["50", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[50, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.006, 0}, {0.008, 118.}, "RoundingRadius" -> 0]},
             
             
             ImageSizeCache->{{69.0535068864711, 
              76.41534113961035}, {-101.35140675820827`, -18.25895209768919}}],
            StatusArea[#, 118]& ,
            TagBoxNote->"118"],
           StyleBox["118", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[118, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.008, 0}, {0.01, 128.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{75.91534113961035, 
              83.27717539274971}, {-108.35076732265904`, -18.25895209768919}}],
            StatusArea[#, 128]& ,
            TagBoxNote->"128"],
           StyleBox["128", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[128, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.01, 0}, {0.012, 135.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{82.77717539274971, 
              90.13900964588896}, {-113.25031971777457`, -18.25895209768919}}],
            StatusArea[#, 135]& ,
            TagBoxNote->"135"],
           StyleBox["135", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[135, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.012, 0}, {0.014, 134.}, "RoundingRadius" -> 0]},
             
             
             ImageSizeCache->{{89.63900964588896, 
              97.00084389902821}, {-112.5503836613295, -18.25895209768919}}],
            StatusArea[#, 134]& ,
            TagBoxNote->"134"],
           StyleBox["134", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[134, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.014, 0}, {0.016, 108.}, "RoundingRadius" -> 0]},
             
             
             ImageSizeCache->{{96.50084389902821, 
              103.86267815216746`}, {-94.3520461937575, -18.25895209768919}}],
            
            StatusArea[#, 108]& ,
            TagBoxNote->"108"],
           StyleBox["108", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[108, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.016, 0}, {0.018, 91.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{103.36267815216746`, 
              110.72451240530671`}, {-82.4531332341912, -18.25895209768919}}],
            
            StatusArea[#, 91]& ,
            TagBoxNote->"91"],
           StyleBox["91", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[91, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.018, 0}, {0.02, 74.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{110.22451240530671`, 
              117.58634665844608`}, {-70.55422027462488, \
-18.258952097689182`}}],
            StatusArea[#, 74]& ,
            TagBoxNote->"74"],
           StyleBox["74", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[74, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.02, 0}, {0.022, 47.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{117.08634665844608`, 
              124.44818091158533`}, {-51.655946750607804`, \
-18.258952097689182`}}],
            StatusArea[#, 47]& ,
            TagBoxNote->"47"],
           StyleBox["47", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[47, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.022, 0}, {0.024, 21.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{123.94818091158533`, 
              131.31001516472458`}, {-33.4576092830358, \
-18.258952097689182`}}],
            StatusArea[#, 21]& ,
            TagBoxNote->"21"],
           StyleBox["21", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[21, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.024, 0}, {0.026, 15.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{130.81001516472458`, 
              138.17184941786383`}, {-29.257992944365338`, \
-18.258952097689182`}}],
            StatusArea[#, 15]& ,
            TagBoxNote->"15"],
           StyleBox["15", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[15, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.026, 0}, {0.028, 16.}, "RoundingRadius" -> 0]},
             ImageSizeCache->{{137.67184941786383`, 
              145.0336836710032}, {-29.957929000810417`, \
-18.258952097689182`}}],
            StatusArea[#, 16]& ,
            TagBoxNote->"16"],
           StyleBox["16", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[16, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.028, 0}, {0.03, 8.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{144.5336836710032, 
              151.89551792414244`}, {-24.3584405492498, \
-18.258952097689182`}}],
            StatusArea[#, 8]& ,
            TagBoxNote->"8"],
           StyleBox["8", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[8, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.03, 0}, {0.032, 2.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{151.39551792414244`, 
              158.7573521772817}, {-20.158824210579333`, \
-18.258952097689182`}}],
            StatusArea[#, 2]& ,
            TagBoxNote->"2"],
           StyleBox["2", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.034, 0}, {0.036, 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{165.11918643042094`, 
              172.4810206835602}, {-19.458888154134257`, \
-18.258952097689182`}}],
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0.038, 0}, {0.04, 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{178.84285493669955`, 
              186.2046891898388}, {-19.458888154134257`, \
-18.258952097689182`}}],
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], 
           "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{-0.00692, 0},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->200,
      PlotRange->{{-0.006, 0.04}, {All, All}},
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {537.5, -64.89356881873896}, 
     ImageScaled[{0.5, 0.5}], {200, 123.60679774997895}]}, {}},
  ContentSelectable->True,
  ImageSize->{657., 141.7871376374779},
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{{3.770986700167244*^9, 
  3.770986723763906*^9}},ExpressionUUID->"7ff6f22e-0f49-473a-a1b6-\
c13ab5e4719d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<~/GitHub/MathematicaStan/figures/linReg2Histo.png\>\"", ",", "p"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.770986318687982*^9, 3.770986345900469*^9}, {
  3.770986600445527*^9, 
  3.770986600749013*^9}},ExpressionUUID->"3b01a2f7-7335-4ea6-aba4-\
0c15d18a1de2"],

Cell[BoxData["\<\"~/GitHub/MathematicaStan/figures/linReg2Histo.png\"\>"], \
"Output",
 CellChangeTimes->{
  3.770986351084024*^9, {3.770986575817173*^9, 3.770986601492882*^9}, 
   3.770986649580201*^9, 
   3.770986727168942*^9},ExpressionUUID->"6ffe003c-ce8d-41a0-9670-\
e5558d4e2499"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"StanResultKeys", "[", "stanResult", "]"}], "\[IndentingNewLine]", 
 RowBox[{"StanResultMetaKeys", "[", "stanResult", "]"}]}], "Input",
 CellChangeTimes->{{3.7710520684514713`*^9, 
  3.771052090993863*^9}},ExpressionUUID->"941e6fb6-0457-4f0c-ad15-\
34bbb4bbcdf9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"alpha\"\>", ",", "\<\"beta.1\"\>", ",", "\<\"beta.2\"\>", 
   ",", "\<\"beta.3\"\>", ",", "\<\"sigma\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.771052077787821*^9, 
  3.771052091455217*^9}},ExpressionUUID->"72ac7333-1fa5-44b3-8169-\
7fdd42a70f37"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"lp__\"\>", ",", "\<\"accept_stat__\"\>", 
   ",", "\<\"stepsize__\"\>", ",", "\<\"treedepth__\"\>", 
   ",", "\<\"n_leapfrog__\"\>", ",", "\<\"divergent__\"\>", 
   ",", "\<\"energy__\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.771052077787821*^9, 
  3.771052091460191*^9}},ExpressionUUID->"63246db2-abf4-42e4-81f6-\
1da478bbb230"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"StanResultReducedKeys", "[", "stanResult", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"StanResultReducedMetaKeys", "[", "stanResult", "]"}]}], "Input",
 CellChangeTimes->{{3.771052342242406*^9, 3.77105235233042*^9}, {
  3.771052393506782*^9, 
  3.771052397458799*^9}},ExpressionUUID->"dcbcdb5c-685a-4e92-9ee5-\
b78747f9a460"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"alpha\"\>", ",", "\<\"beta\"\>", ",", "\<\"sigma\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.7710523987648077`*^9},ExpressionUUID->"ab6efb0f-6fb2-4f5c-80c1-\
1bfef920a21e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"lp__\"\>", ",", "\<\"accept_stat__\"\>", 
   ",", "\<\"stepsize__\"\>", ",", "\<\"treedepth__\"\>", 
   ",", "\<\"n_leapfrog__\"\>", ",", "\<\"divergent__\"\>", 
   ",", "\<\"energy__\"\>"}], "}"}]], "Output",
 CellChangeTimes->{
  3.77105239877118*^9},ExpressionUUID->"51390b2d-fd9a-453a-8cfa-186a62bf1823"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"GetStanResult", "[", 
  RowBox[{"Mean", ",", "stanResult", ",", "\"\<beta.2\>\""}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"GetStanResult", "[", 
  RowBox[{"Mean", ",", "stanResult", ",", "\"\<beta\>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.771052596683009*^9, 
  3.771052608386986*^9}},ExpressionUUID->"f487be0a-bc01-43f1-a1e2-\
016db05b4ea8"],

Cell[BoxData[
 RowBox[{"-", "0.010087953683000004`"}]], "Output",
 CellChangeTimes->{3.77105260374265*^9, 
  3.771052649070813*^9},ExpressionUUID->"45cf9b09-74a9-4a23-a733-\
6b222abfa5fb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3.3032081607`", ",", 
   RowBox[{"-", "0.010087953683`"}], ",", "0.012691305083`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.77105260374265*^9, 
  3.771052649077373*^9},ExpressionUUID->"a282ca3f-7c47-4f07-8428-\
15fecbfea64a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"#", "->", 
      RowBox[{"GetStanResult", "[", 
       RowBox[{"stanResult", ",", "#"}], "]"}]}], "&"}], ",", 
    RowBox[{"StanResultKeys", "[", "stanResult", "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"Values", "[", "#", "]"}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", 
        RowBox[{"Keys", "[", "#", "]"}]}]}], "]"}], "&"}], ",", "%"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"GraphicsGrid", "[", 
  RowBox[{"Partition", "[", 
   RowBox[{"%", ",", "3", ",", "3", ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}], ",", "Null"}], "]"}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.771052796869053*^9, 3.771052879795451*^9}, {
  3.771053110314189*^9, 
  3.771053135411261*^9}},ExpressionUUID->"7ae70516-0468-4586-b963-\
a423a31cd620"],

Cell[BoxData[
 GraphicsBox[{{}, {{InsetBox[
      GraphicsBox[{{}, {{}, {}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.006944444444444445], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1:eJxdW3VcVFsXRUREMbCxx0JsbOxloNiYIKKMCEiIDN0wwMAMMJSJje0zsXnm
2NgYKIoxNj5Fx8bkm+Gu+8/nP++33+Xec86OtdfeZ08bN/+pHsZGRkalVY2M
DP8V/umGLYjtW93slYmG/wN2HmdXXW777JQgmmGv2d8ji9d+p2yBLN+R520r
flBuCJs63VsGrTtP2RLpczZG+kq/DBPkFnjwd9kyqy0/+VwC5x7JgRvn/Kbc
Fl3tezeeuM2M67eHfw9v9d2b4nMrON4Y+6H5kyp8bo3dXkFrShSP+LwzSpX1
zmy6VhuC3BUvvvf7cz/ThHJ3lJzaf2tzw2qUbWDbLfymY2F1fq8nbv3TZf3L
ppaUeyHDVNfY3qYR5d445xxdU95T/Ps+OB68xNJkeXPKfXHgWvqbGuObUu6H
ZR6q+XNa1OF6/fHzQOtObc+2pmyL6VM75qZktaQ8AHvcL46WrJNQHojNT07W
WXOgFeVBKLRSTh6YXUJ9DsaurE9LfFxrcr0hOP1M9spxST3KQ7Goyaq3faYa
UR6GejvuvIuf+Zf6AuaOL6g+ZLax8H05MG9rmess71f8/nCk292+f0lSi8+H
QxZdtrJDlYbczwhsGqRa2+lgXT4fAeM6G8ZdG9qUz0ci3uR8Zs/vPJ98JC73
L3mY87cBn4/CkchJkU8s+T35KHTYe72nZLX4fTt8r2Lv96x9PT63wyLvvu3f
9xTtMxoBzrqNe3M/CueRj4b5gcLr3o2v8nxj0DYgc0vdRzy/fAzsZe080tqX
8bk9TFqMWLbqTzM+t4fCvUqD/K+i/41Ft9lv0xSHaW/5WHyernxYq78YH+Ow
9FfLVOM/pnw+Dm0Khtfo7feF3x+Prfk73h1rK+5/PN7O1DuwuYTvT8Cu7af7
1Fovfn8CTJ5rb/V8/ZT6n4jN6e3uPhPtKZ8IN4XO67mZMd+fhAafht/wnMH4
k0/ieVvx+WSkRHWNKW1L/5RPxiTzuV8auTfhcwd8LbkXH5TM+IADei5tUNZ5
8w9hfbkDuti4h+xcwHjROGBaxKAz3qc/8XxTkNhn/s3gxhbC9zAFx+rCp8GY
BlxvCmr9N/tV8EruXzMFd4papvlNvc/3p8I8R7P72A/6D6Zihs83dNEZUV9T
0X1nXlOt8UthP5qpKEl6NTC9zyfqZxoGthsXlehfhe9Pw+IDedtaDmU8yKeh
04HhVk0H0B6aaVg9Y/3O3U5cz2g6FM2Cy52TDwrfw3S8HHWsZqdhb6jP6bDp
oRk6sEMb7n86Lm91eTqnu4h3MxCYmvHi06nOPP8MbGq18WZLE+pXPgNXLC4e
zU/vxPdnCHhS2IX6n4m+nao9mru4Nd+fibrmh7ZGXOzI92dickjBNdnZdnx/
Jr6buuZMWGbF9x3hlV0WPawD8QKOGPm6b2hKzebUnyOu/NvQcdmjRrSfI1rY
3W02rkzEDyfMHDXxyw/ruzy/E7p2fha8eDfxVO4E7b/fZZd60p4aJxQWDjt9
vqaIv7OwLeJip4G3zLn/WegUtv75pvM3+P4s2MUPze44tgXfn4XMacHtV8SJ
eOqMbcF5f29soL7gDOU2x8u9TBrz/M64/KeOXfzfGnzfGY9bf5jRpcF37n82
juq3FzCmPt+fjbX1tpw43aQu358N5enfjXo5HqX/zEa3qyMGbZslxpcLDs76
+u+DVOYzuECPxnlP33zm/l2w/2hR0K1BxA+NC+ZHnqlf11rE8zkou/0xJ36c
BfU/B48HF7Xpf9aU68/Bys6Wy+5cEvc/B2cezTpWZlyL558LF+faKVEL+X3M
hd65ng3qWc715yJ69d93Y2pSH5q5kORsuvjBj7KRK5w7+4+xrS3GnytW7P5q
N6K56H+umGrY4AbqW+OK5Tc+Dc4/xr83kuJl0QBTd3/qSyKFhdOAgwX9iEeQ
osObVZf6z+Z+pVI89DLyj98s4qUU8oS0Rn0tqf9cKSZ+zpgWvLka15PipHJ8
xqCXjEetFB7pkarRYT+p/3m4OcuzXmo3xptkHhxm1nKsjju0xzx0fDDD/sdY
xq90Hs5VD/3dxOwk8WkejnXUR8yF+oL+c+eh9PHZDheHML9o5qF6dKxlm8Hm
gqydhyNucfeH/PjF+HWDAT561CKeS9wQsdd5pW5QW57fDd8HNaz28yBlqRvm
Ji1dP92c8Sh3Q2KPCVtrWlnx/G5Ag3lnb6dR1rihyZGbRo+NO/D8blCsVnc+
m3+L689H6xNPhwb63ub55yNnUf1ETSrthfnQrz5q3SjGj3Q+phaZTPlehflb
Ph9BiRvqdHl4U9BH7nwY4NPGnfrWzEdsS9sFo96Ycv35+DvyZ9lbqZh/3ZGQ
1VVqHEa+JHGHnq08HF21gnjgDh/fUXpKx3iRuiPQ4cyEklOif7qjUctLL4e1
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
qCzXW1AuVaFynCiNf69TYfT1M+tCy/m9chVmGAjZDXH+JAU2lQ0p1i9mKcL9
9wv6u0WKcD+TTzy0TME/FxfGtXy/kvV/CkICk59l9D/B+E+BoR1VPI3nt0nB
6AP7YwpK6M+2KTjx51+vgnDaGykoLfcKuJDHfrp9CuobxncvsB/tkILKn4dU
I/91SkHOlK5HDv4kv5amCP2Jp+0F2SsFrjkTGqnHcZ5GloLHs46VjWhHvApP
gfnoDiHGA6kPeQqM7f2evfjLfKxKgZ7d+UzsTX6elSLw51zy0ZwUTLty92fb
NmJ/MgW/el9LKnm7nPZPwbJVQwprqlkf5qWg+4D3S+s0Jr7mp/C+QLy/T8Gm
vZJrTn0YnwUpKFzztdNFd+qjMEW4v3NiPVacgikq+cjtgWL9p19fX47+FefH
S1PwcW3OVzdrPteloEZvv4rLl5k/ylOE+qAK/cUoFaELTZ6FiP5tlopZaZOr
2LRifFqkonJcbhDxzTIVsg6D+hkHMF9JUtHIcGFz4gP5fyqKv5qHnj1M+9ik
Vl5XdPEQ+z+pWLH9cbNisR+IVGQM0ld068X+T6ownynyWYdUfLh0dsRub1NB
dkoV7m/+I3+QpiL7o/UynYL1iFcq/pR4nHr/hfNfMv36da1XB1ZjPRqeituT
bY8dmnCO/Z9UGMYxN7bj/ZsqFfUGGiaMOI+blYrF2foCcAj9JycVkQaCvpr8
MzdVmI+w6yicd3sq4ibe3a4sYL2Yl4rnUzo/rXGCeJufirzmh7tdVovz8KnC
vEcV5qOCVNyd+a7HMSXlwlS4GzYwhnJxKgzjTC2fEh+1qTB13xsW58J4Lk1F
yGB9BT9UzP+puPez7YZu4u8xylPRUU+PrWuK8+dpaDTtTcc1jzjfYJaGhBZL
bW73Y/xapMG3k6QsTn6W+J+GJnp4aL+J+pekwf3NyCZ3jnA96zQYbsdlXcT8
n4aLXxQdWmUxn9umoXK8voj4iTRhXuQN/dU+DWN2nd9mlMN+sEMa3mkGtBsX
JcZ/Gnpl/j6tOUC+KE1D05kfR7+awn6SVxpq3o9ovnot75NkaVhmGN88zn5b
eJpwv96N/XN5GoZUNjC5nioNevajzxDiPFIadvfpVO3RUOafnDRhvjRXnM9J
Q9Flhet/27j/7WnCfc0/rJ/z0oT7pHLykXy+r6P+NWlYaPjBUBDtV5AGw/T/
2yRT2j+N86TUX3GaMA96hP0MbZpQ/3wkHyhNE34vkMr969KEeVAF81m5/vyn
H8065if+fk+NGxNs1vjm8PcfZmocndSu2zJHsf+vRrNFmtfKfSL/V8M1ynOs
3Jn7kahxzXSl+4td/HtrNe676gvkb2L9p8ZQffnQaS3zia1a6G+vpr9AjTEv
rXy8F4n4r4bia1ydzy+5Xwc1dh4833foEsank1q4/63HeJCqETx66TfTYSL/
U6OyXWIh8j+10K+sR7wNV/P3NmL/T42zY84ttd9IfFSpMVl//CO9iUdZamEe
dj3jNUfN+0+un6tG5JauI1u8Jd5vVwvzU1uojzw1wt3upm1wYbzm6/Wn384U
Z/H3IGocj9gxctEF2rtAjSmeiRN6BRoL+ytUC/PWbqwPi9WoeG3jOlcqzveo
IbFb+69SIdZ/ahQ8Hr7xVPI69v/UWBXTatPgIPbry9VCv7iTOP+cDp+NN8Y0
/agl/0tHhpMhAbBetEjH1RqGC0rWt5bpCCv33T96CM8nScd2/5W3PbK5H+t0
9Ohzz3tzB57PJh09zXa1cD7Het42HdqThgF31gtIx9lRiQ0HJ/H+0z4d8i73
99UrEOu/dM6nlrP/k46P9Xp2WLyd+pGmC/l9Gu+7vNLxcL4ekL6w3ybTr28Y
aFfwfj08nfdF4u/b0mGAG8sbIv9PF/hmPeJNVjqcE9TymmM4P5CTjjU/ilpI
cu4w/6djaePuO/NWivV/Oj4PaVev2WneN+Slo2PlD0job/np+Br/Yu3IpuL8
YjpkB8L32ZyjXJAO//EvEnqHi/xfLxsa7Nki/qcL/dnRnE/W6vfbxDBRTP8r
TYfh55H7RH6pS8eDqrs1WY1Yb5Wno2uuw+TW8cyXRhlYd6ike58jlsL+zDJg
GB+Mvsb62CJDuG/px361ZQbKdIYBa+YHSQYOvtQT4HHEI+sMFIW/sepZQL5k
k4G1Rz/NWqekbJsh5P8d/J4eDd9WtHh1ZTz9xz4DmTJn3cYPjEeHDFyUv/v6
PpP9RSe97B5Qkf2GvxeSZqBbDQc9JSNeeGVgaI2F10/3vsv8n4G+828Gh+5n
/RKeIfz+abX4+8QMPPyyYNjUc5RV+v0sWvdf1mriVVYGCkcV676kUn85GbC3
NO36b03273IzBP5sR3/anoELfn3kR3KZL/IysHtC+ZbYVswH+RnYGd7uc0Fr
kf9nCPMcO8knCjJw9qu1S6Yx578LM4TfTw5gvinOgJehAfOS+KTV26P2SZuV
Pvz70gxIXxa2LblvRftnwFCOnGrJ5+UZcDb83G0IZaNMGK7rij3IL80yMaxl
ZtPtauZ3i0x8kIRuLWxKPLXMFOZFdPRHSabQf4rlfal1JtrfvGK9vLk4L5CJ
ef0Xzl46i9+3zcSitF7N3etz3haZwvzWmgb4H8ulqmg=
           "]]}}, {}, {}, {}, {}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{None, None},
       AxesOrigin->{0., 0},
       DisplayFunction->Identity,
       Frame->{{False, False}, {False, False}},
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->All,
       Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}},
       PlotLabel->FormBox["\"alpha\"", TraditionalForm],
       PlotRange->{{0., 1000.}, {-17.8501, 15.8427}},
       PlotRangeClipping->True,
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}], {193.5, -130.88543819998318}, 
      ImageScaled[{0.5, 0.5}], {360., 245.41019662496848}], InsetBox[
      GraphicsBox[{{}, {{}, {}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.006944444444444445], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
fvccy/p/GYjiHe5uS4FGBpyqGlBfHf8HfQFoQQ==
           "]]}}, {}, {}, {}, {}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{None, None},
       AxesOrigin->{0., 0},
       DisplayFunction->Identity,
       Frame->{{False, False}, {False, False}},
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->All,
       Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}},
       PlotLabel->FormBox["\"beta.1\"", TraditionalForm],
       PlotRange->{{0., 1000.}, {-2.07769, 9.30662}},
       PlotRangeClipping->True,
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}], {580.5, -130.88543819998318}, 
      ImageScaled[{0.5, 0.5}], {360., 245.41019662496848}], InsetBox[
      GraphicsBox[{{}, {{}, {}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.006944444444444445], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
jlmYJ/mfMgmHbFwjGr4Rv1YlYXPAnitG7Zh+XBI+nuz26IBCSvq36mMx0jE5
g/KbJgk9Bh4v3jON7NOchJpBpyqen2H6z8lQBdo5GHgR/9dNxgybBfs9O5I9
WMlw78h2stMkkf8nY9OvAZuNj6wl/ZMh7LC0XBhO5+majPght9NCDcgenGSk
7jvql15P/SpuMm7UrQuzqmP4bzIun9fzuPiB4T/J6OOslNjrkKxMRuTXLpfD
f5I/qZKxTPwntkMnJv6TcXB2ySA3e8LX6mRER/R9tyaR5muSITl9Ys1oSyb+
kzGsrf1whOl/p6DIaNpv5fh60j8Fxo5dz+xOaiD9U6iepHzPTsGIkjqlw9I0
8v8U2J5J/v3nHdnPNYX6t1Tvc1Lw/kmwovQXw39TwBewIFbQfvgpeLWy87Ej
IpLzUtAvcVXstackK1Nwd+IgxYtJdF6qFJxf0ntKzQvKN+oUPLrUXmDkTfVN
dQrODj4ry+xN/WdNCvzLLLUe7ysi+7fK/zWAmfunVKwUWJ1IeU38VjcV+RFz
nwonUf3OSsVXjGMHxBGeslMRaZLfyJtO54dUmPisa7R5wPh/KtbH7tg/4V+q
5zmpaHxrq121jvrr3FRsaxLknslm+supOD+xaEmaiPh8Xir4Ov9MKzlH8aFM
xZGBNfFODyhfqVLxQX/o78QA6sepU+Eme9x9zlAJ2T8Ve+93v9rNnviUJhU7
B4ZGTBtJ/dPmVBRH9Tvv+om5z00Dp/h38prhlI9107C16NViS32G/6bh4tel
1cn+VE+x03BBuj++3wum/kuDSWhpz8v2xNdd0/AyX1CinE3+yEkDa0zjjGFn
SB9uGnKbuzh71dH6/DQsPmxxPfwsnW9eGv5xd9aN0ye+rkzDoFLz2qUFdL+h
SqP+PMnqNGwPzLE9ZBJK+qchqoNqdewhkP6t+59UubXPRMK35tb9z1rx+oOM
qf/S0fF1vtkQMemnmw4/u/u2K/OZ+jcdQZ/MdZ7vJ/xhp+P7/B4/rQ+QPyMd
6SzTpVONKL+7pqOl/NZmgy3ENzjpuFKkyinqQvmTm47oK7/PHVtO9x38dIzb
emLU9WzC97x0mLnEVV3jMv6fjlMLw66+lpCsSkdufYvl/UOkjzod7/dEb/24
n+6Xq9NhI0/+NGQM4ZEmHVLnwUuaLKgf3pyOsIKtH2bqkv9p8WFjGffskBXJ
2nyMjg+PPDaK+LouH0trVymi2cTn9fgwmnLehB1H9ReLj4yn33/l/BT+nW/I
B89iqlNaLdMv4OPQ9DaGTPc/5nwE5J3QXrCa1gMfo173PzFiM+UbBz6a1gZF
WvYle7jysfjAd2ffHXR+HnwkxpQtSq5j6is+hocIsg6F0XrBfETusjDt+J7w
msuH3agts1nHqf/E4+OfnSPKdbaX0vnz8eMoZ9d4DeULCR+yCSrFkyyydx4f
+DHGOaOI+EwBH2YPDtr9qqT3AUo+WoujXX0Cqf4p4ePlhktmDfep/6biI3j0
3u/is4SfZXyUFc4ImL2eyd98fNmZet08mPCpio/t40/3uLOd+H01H+1ON5yM
csv7K9fx8WTJA/tPnsSnNHzMmXpQ/HyN+K/cxMcYo8LbznoUf818FL0+2+t6
MfGh73yE9p7v9FCL6b8JcPznUH2T64Rf2gKMGrvQbGA64ZuuAOGW7cuWnKRx
PQFUfyzNwi9Qfc8S4I9qx+wF1uSfhgLUFZ57MU9FMlsAZxFvlPcWwiNzASRO
/+oulDP1swBzxv8Z/vsrnb+DAB5xi7q/mUD1kasA/ikFp8Kmkb09BPAxbLth
ZuwvgPx9zlz3e3S/GSzAcA9304pbJHMF2HtvyvC9Eygf8wTYZ2Jl2n8Ic38k
wNDkr147x9D9skSA8rmPSyUbKL/mCaDtdVCUrC4k+wswxrOsS0o99RuUAuR1
03a7fpLwuUQAB7ebldWviF+qBDhtf3Wl5c49f79XJsDYmE/ypi2Et2oBlAWd
c/lDyF5VAjyZPLN/iw6dX7UAmQfXWNk9oHq0TgD9k/Ehlb7ElzUCLHF7N/3i
bLovahJg7qoXP6YPJf9tFmDVlXSHilTiq98FyC6dsvpeDtN/FKI2IW2+sIXs
oS1EzDeL6Us30X2qrhC3gqMndL5D9beeEO5zLS+fCaP+EUuIx16VOnIDwhtD
IU79Ph5cxaPzYwshTy+MagTVU+ZC7F+3U5ubxNzXC9G+51bHa8Po9w5C5D3o
5NjNmPifqxDcA0Wdb7GJv3kIkb3oXaflIvo9RwjdQ+vCi/dS/RMsxMvGcr3j
y7ZQ/Atxb9fx+5wSwhueEFpTWTO8LJj+sRD18xy/GaXS+UuE+DytRN/0D+Fl
nhDB2heNk/vQfgqEsPZpq9iZ+kSIyQnTnROaqH4qEWKH0PTDm3WEXyoh9UP3
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
ezrmVK73IfuwJbj3vaxhwyDiw+YSXO3pdOnaFcJrSNBdOCLqlfcqsr8EhUd/
xVdlUD53lUBic/uiPIzugzwk0MQMKDXYxcS/BLJebQUA8dFgCfjLQ+sc7Ugf
rgQrnvW7Ne3KPsJ/Cd477NG1N6P6jS9Bt8jzh0f7kiyRIOf19Uu2FfT+KE+C
Fp+4pw5BFC8FEgwdOrVhzBji+0oJfqvdt6CO6qsSCerLTc9GbiE+oJLg+qO2
Bz+El2US1Hi0OSDho1qCosqJb54XUH6tkuBxVYeV9hvIf6sl0LkWNzhkF/lv
Xet577ux6YsRna9Ggqj9Vz3j/qH6qEmC3kOMN23/l+KtufW8GlyGH9xG5/1d
grbX1yMcSdaSYsO2VL8Fm6nfoC2Fs9NAvy+zmfcQUqR30reQyKj/rydFUM85
JqudyP9Y0r/5ei3JhlIMdrP/MDaU/JUtRWNSv32zG2ncXAp5t01hHRIIbyH9
v+9/HKRo+Xgpu/EV5VNXKeK5KrMJo6g+95Bi9jCJ8c1zzHsgKcK8a5eYqEgO
lmKoU6L/t1vEX7hSJHbh3TwbSPHJk2J5NOteairFL1+Kl0bRkjIL4psSKRx+
HM5uqWbqfynKnZyFZtspPgukWDYwjTs9jvKTUgr+y5afm82Iz5dI0fNAd9eA
b8x9lRSn5+6ae2EC2a9MSu/HCD/VUnq/Q/e1VVKE/Do7bs4WkqulYCXK1vVd
Qv5RJ0X1m/JjIyYQHmqkmLxpotkjCb33a5JCcrn67P6iw2R/KSr0q3LWOlP+
+C6FVa/8/sFDCV+1smHH9brg3IP6BdrZWH9n54FTAyg/62ZjgccuZdErwmu9
bOh/uTvOuIzyCSub3pOSPxpmQzBFb/L0BxSf7GzskN602JBG78HMs9GjsSDQ
pT3T/8lGL8ON0aIEytcO2TCYoF06dCmdj2s2fGw3HAi2pHGP1v3+6Thw3Arm
PWY2Mhv7TP1oSvVBcDaCrVPWG86g+oKbDa7RDHt2CPVfeNn4U1nsuOMl8TF+
Nn4/WNtaAZB/S7KxfejVMWoV04/NRsd/9q6YM5v4eUE2xrccNXAIo36fMhv9
1j3pL9nygOyfDdcpSVMQwtzXZWNU9wL13hN0v1SWDccZI8KfuFD+UWfDsMxj
fkYIyVXZSMsLPHNOn/CmulVfi5p9My7TeddloxUceF14lJ812ZA3f2V1fEpy
UzZyJH4fOxeQvZqzwZcE31CPpHj4no356ni2XyHhhVYONHO6r3OvI3/XzsHX
MeKnAY+pX6ibg4vTaioiRlD9ppeDe6U/vMLPEz6xcvAf3Ygk2TAHoapy/XZv
iX+yc7DyU4vNvALCE/Mc3A+seBf7gvgncvB4/6XBX3QpvhxyMEgnwFhaROu5
5sCpu3PVqf1M/ZeDD5tMWIeHMe9hczChzNYhinlvHJyDxlT38QtbiB9zc7Do
ztTzT4rIH3g5uPDy3rUZH+j3/Byor+gMCfxN8SzJge9Ed/bYXdQfyMvBrzdT
vbkn6fwKcmA5bJLroD9UjylzME5goW8XRvylJAdcT0+e91iKV1UOthxpGD/5
LtmjLAf5pj2CFfOZv2fIweLObX9RQHJVDjJtehi51pL+1Tl4yOmQmqpN+63L
wei259/f6feaHLTvarq8eRP1j5tavz8/UC8hg+rp5hxI3eeITJzDKP+3ns+m
MG92X3qvoiWDFn+v13FDWk9bhi3tNuz1HUf9TF0ZfH1vGtX/pH6angyf92/U
rtGl37NkeLHzmnmP+WsI/2V4auTK1p5P9S1bBgeXlXbnrjH9XxmepWUVoZD4
OmTIP/979k47pv6TQeUuPN/IvIdxlaEloC3Dkz09ZDi35lDCLE/6HkeGx/+0
eTDxrWAZMu7bFxR5EX5wZTCeXYUtywgveDL8V77WMP2/1nGdlbfufqL1JTJY
z0p8/kxF+TlPhj6tbHhWIvH7Ahmq7e0ubFtI31fKMAOnM7v1JHwqkUF+6KW2
hnl/opJhLPdgj/sC6qeUybBh5inNrU1UD6hlmBOy0mHqwS1/91Mlg/1/D16p
vqiWIcZhxdaAaKo/6mRI1d49a39nwmeNDLXDNkoVUurPNckQUDew4tEw4nvN
Mqyfc7v79GuUX7/L8LBDrM/1MOb+R44/rFXDL96h+ktbDmufQ15TLUnWlYN/
DMLHF5n+vxwfV9fGWtdQf54lh/PfgoriX071OeU/thxLA9r+Io7uP8zlSAvI
bLdmGvFTyFHk42nzO4jJ/3K8GH2k845h1B90lSP1apeOlvnU7/GQw7DbZ6nV
HOpfceQ4xGt7IEpysBz/wW8JvX/gyvFy7INlQXa0f54cFmPN5s+NYf6+TA6r
My2v7x+m85bIUffx8pej6+n3eXIoV6w/0ENA+FMgR7i5cY9fJbQfpRwNZm69
2zvT/UCJHElnj7kfmUP1gkoO020eESFTKB+XyeFQaRTzSc78PZwck0XXQ9/0
If5YJUf9q2hHOJF9q+UYzG5jJHS+dXK0VfNP/iV/1rTqd6TeQ5pI401yjG/3
vXihlPy1WY53r9wDYkHrfZejk3W20exjq8n+CqRCOSlkAfU3tBVYfv82PllQ
f0NXgYhf0sviKfS+WE+BxHZfa3aNo341S4Grhms9l/Zg7n8USOjvlub2ls6X
rQDr6Ofg3QYkmyvQZ2vvMK8/lF+ggHFiYCl3dyLZX4Fhbzqk7wsjPHFV4GhI
2P5Opyh/eyjwdf5iiUdP4jscBb6MnWjJ6krjwQpsnz7qbslj6q9wFfB8d7Vj
5XEG/xXob9/ictiX+DlfgYZNq/M3ZBHeSBT4dmqdTm8B2StPgQOOCs1rXfLn
AgVaMnv2n36U+ntKBZ5Mk203L6L+SYkCvbo++jnkMOG9SgHDzQ7s2qsM/1Og
b+r0y5LuhF9qxd/yPJXye5UCj86Wf3hXRfeL1Qr0G3X0RJcmpv+nQLz01V6B
Cf39oEaBaZH+h0bWUn+vSYG11l3Drp8huVmBP6+iHq3YTP3A76363L+5wuE+
9Qu1cnF84Q6TfR+Y+59cdIz5/P2UM+1fNxdbP4vyPrVQPaGXC15z3y7V75m/
F8vF1Q/dZrpcJv5omItF/PdTIzeRf7JzsbZT3/R+ccRvzHOR+h/AUP5GLrbY
hC8s7nDK5n8uR94I
           "]]}}, {}, {}, {}, {}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{None, None},
       AxesOrigin->{0., 0},
       DisplayFunction->Identity,
       Frame->{{False, False}, {False, False}},
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->All,
       Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}},
       PlotLabel->FormBox["\"beta.2\"", TraditionalForm],
       PlotRange->{{0., 1000.}, {-0.79394, 0.542465}},
       PlotRangeClipping->True,
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}], {967.5, -130.88543819998318}, 
      ImageScaled[{0.5, 0.5}], {360., 245.41019662496848}]}, {InsetBox[
      GraphicsBox[{{}, {{}, {}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.006944444444444445], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
wgcvcLVt7lmmP3xkN/pMe+lP5zHno3XuctucIJZP8TG1e5nVdleab8/HwY8b
ww4qsPyCj8GmO7wes/rfm48ZIr0J691p/0A+1Cfjse99wieSj8Y5V/v+UGD5
Fx+WdU++GT2leCPhwy8uq25rCMtH+Jiyz1i7XkL4Z/PhMLJR97Ic1Tc5fOxz
sDGobSV55fOx6cbKVx816HzFfGyx61rUcozqqTI+6u29tPL+ZfU7H7WDP42J
KCV+K/nodrbZVXKG5FnHx/zpk22jDpG9NPCxy8x3ydHfTL971rOSeY1wJn1o
4cN9dVyq83Ga38aHXuDPHZ3PyJ928ZHlJmntd4P8FUeAeXPGPjBKpXgiL8CZ
rY92/b2Z/LOyAHd6m3BLj5P+aQgQITfVX3009T+5AhwOkJ7SiyL71RXgn0nF
Q+64M38pQL70pcenYLIHEwFuD/rrfMEq1l8XoOTcOQtJb5KvuQCcMOdyS3a/
YSnAyOnzP+RZ0Li9AGb55dl39rL6WoDX576OvqnoRvgLkO2ccrSPL933Bgrw
YFDk8V+mFH8jBaiOttr3U4ndjwqwekGAzfNCit8SAdbXHdTvxSH5ZAoQZRBy
0z6e5JstgKn8uNWXhxKdI8CV1b3Vw74SnS9A315pk9d/IrpYgMuNrxsMvpF+
lwkQNudHVdJnFr8ESBFdK0vWI7wqBah1+nbjQCXLZwXwLpo3+vtHGm8QwEMh
9SjfkPXTBfjbcF61cynpc4sAe/Rq1e+3kPzaBDB2mDr3dTLRXQKYH7EoVbNl
/Z9E6Fa1xmsPIjzkE3Ft/NA5AxxIvsqJiEgVN3NGUj6qkQjxzIMuu2vZfVUi
bqzKato+lPyxbs/8h8OXdbsw/BPR10xlVrpPBOGfiHvHbmnNe0v6hkSoZN8Z
93g66Zt5It7aNXpMukf+0jIRNRFtKv3riLZPxIz1L+X+vUr1EC8RX8r94y4r
0H7eiVherbj8Rg3F38BENER+t5L+JHlHJsLqiL99Wh92f5SI9J1hWsdMyL4k
iWhLtebcSmL1aCKcDJwmjyyg/bMTYdhavT5Wn9VniVg89deQ52dI/vmJWPN2
/+5X9qxeTYT++ax7uxNp/bJE4BFXyaaL9KsiERNeWM3uXkz3mZWJKFio+vTK
IxbPEpHW7tJ5/AOdvyERWvWeVt/SWD87Ebz96jGW1WTfLYmoFhj3j51L37cl
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
zcB8Q7ujmn+L5v8PWEgYuA==
           "]]}}, {}, {}, {}, {}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{None, None},
       AxesOrigin->{0., 0},
       DisplayFunction->Identity,
       Frame->{{False, False}, {False, False}},
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->All,
       Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}},
       PlotLabel->FormBox["\"beta.3\"", TraditionalForm],
       PlotRange->{{0., 1000.}, {-0.00548457, 0.038939}},
       PlotRangeClipping->True,
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}], {193.5, -392.6563145999496}, 
      ImageScaled[{0.5, 0.5}], {360., 245.41019662496848}], InsetBox[
      GraphicsBox[{{}, {{}, {}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.006944444444444445], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
R8Zg+g==
           "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGBQAGIQfcqEj+H/sSQHvqR0rrnTpRwYQOBBkkOMhcAk1jOC
ED5DssP7h5Me+52E8hWSHZbc38c3p5gPwndIdtALu5Ig1cYL4SckOzzUqCzt
S4Sqb0h2uCVdk2h0Fap+QbKD0IJl09Zu5YLwDyQ7LHMR2tuzSAxqf7LDm7vy
70NX80PtT3HY8WRHsFWEANT+FIft3GdLpTKh5jukOHht9T+e/Awqn5Di8PSC
0u2f+4Sh9qc4SDdWxO5PEIHan+LgZPfi5ppdolD7Uxwuf1u/xuQkzP4Uh9nM
LMVfbkD5DKkOCnHX9W+shdmf6rDkyVVLNhWY/akO0lrHfs4OgPonIdWh6f/a
lONuPFD7Ux02nJT6KuAL1b8g1aFcNKgu6K0Q1P5UBxeTXc03IqH6H6Q6/Amy
z9cSgoV/msN2jc2OapYw+9Mc7INc2kL3QM13SHO4y66wtfMyNLwSgHwe8wef
lWHhn+bwZZmS6LFrkg5LXixxbmxLg8c3AG4Sk10=
           "]], 
          LineBox[CompressedData["
1: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
/nFh
           "]], LineBox[CompressedData["
1:eJw9k3tIU3EUx69zqHM+prkEpdAI06hcWhQpcUBoKqZTwUhTh5aDykd2f79f
wwfDCisqppjTorA0qYxlZg/CdESSpuHMXtC06R9aljrBNB1ok3vswuXy4Ty+
3/P7nRucU5hyTMRxXLTjXf1qhxsv1sby4JWjcb9pCABu9VHxkDI1NFvn5C+w
moeaphMh3/vXC1zEw7fF8uMdvJfAOh4yl2OWpqQygfU8yC/HT4p3SQRu4KGz
aWe6Uo7cyoNYfHru7ysPgU088JPvNNoRjJsdvNmwoi93F9jKw4YaxdB8IerZ
eKj3jOjtOewtMEegONKiG5hBfzICOZ0dnD3UT+AgAqm1wVeJzzqBFQRiLbk/
Yw75CAwEzg1V+JedRz8qAqRlomnBE/XUBFZ+Ky/12DxxfgIFyXlnEyKkOD+B
amN96ZOD2E9P4FZWWJ/MFf01EKgLDzft34fn00pAn5i5uC0c2UTgAzcikkxi
vZlAhlux6vVJZKvDb6DyYfcWzLcRWHDJrkuQY5yjQPckkZ4r6F9GIX4mMLsk
BPWDKNzN824XxWC+gkLVjVGX0hHsBxQqI7uuO4txXhWFNp3E8rIE89UU1KLn
0+O9yEUUWiR3pp312F9Hwf7j47UB37X7pzCauWMsKtkX56eg3Lv9zKAB81sd
fvz4krhG1DNRMIw9aJuJx7iZwr3d76MSfdbmp1DRPdr/qBnZRiFt9sB4VRfq
cQz6Q2sz0vORZQysn4ejP93G8whikCjNmpMfxf4KBlqn+cH7v3DfgIFxq93o
toz3qWLQp9FutAxjvZrB0uq6p2J9EQPp02bt27C1/WfQfupNeqk7xvUMAgpM
E5WP0W8DA+eyTUnVRjHOz8B+JL97uRjZxMD3wpc/0meob2agm/UIWNIgWxnk
DvI04oUUOl3TvsZNs///6z/G8xav
           "]], LineBox[CompressedData["
1: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

           "]], LineBox[CompressedData["
1:eJw9lQtQlFUUx3d9JLKAi4YPTENxZckQRkVRM/5iICQWyeSgGSKOQYwFqCg2
qEDeBwYMOqJYAosvwLRZUVfCR5iObGBJxgCOpoiWaKGYSuSg9u1853NndnZ+
c+8953/O/567Y+KTF6zoo9PpVilfx+/tjppb+vkMbvEJzsU7PaFzfKIYzmes
13eneqgcwxB1cMOM0dFDVI5j2NqZERx4fbDKiQzZq8O2d18wqJzCYEvY0a+i
cpjK6QzvROaM++J74kwGfUDJ7Dk/uKssGfZsyv7Kw4O4gKFq4ud79aeMKhcx
uN/IWeQfRmxROMXpw6S1zipXMEweOj/B50s3la0MIyPPdbmnkt5qhva7hVUu
7q+qXMvw378jhrntIz12htOV4exIf+JGhtCTzr7BvlRPK8OkoHdji70pfhtD
ZtP49+6vc1W5g2F5qOuBZTGkr4uhb1XLyeBYWu9h8K99e0baCoqn4/DZb7k6
z9NJZSeOTpvh57QaOm/kWGecGd2RQTycY2xObNgRjb040vL1V/4qJjZz+BWe
8N49lPoXwLFjvJLAQBzEYUTSEJ9pxOAwR7REnhlB9YRzGMJMaX2+Jr1RHGIP
Su3RpC+G42TjkvKtCwepHMcRX9Y85UEP1ZPIMbM3cNHe65r/HCOfGPPutxGn
c7Cl9+7M30/3JZOjN9cwIGQbsVTi+wwyHOfEBRxZlwZ5b64jfUVK/flpqSNd
Kb+FI6docMTjfzT/OaZknkB2+0CVrRzffjTL5/QDWq/m2GK3bpk2ifTUKnpM
o6Ommqg+uxLfceAZcSNH/bmQw59ep361cmxPKs2vu0j9buNYfiz/4Hgnit/B
8Z2rx63ePIrfxVFWplzoQuIeDuV2BxZxF5V1Ar/0JrkZcweo7CSQu9m2e95D
WjcKbBds8W+n6PxwAd2oPxsMXZTPSyC6sdOU9yv5ZVa4ofnp2LOa/wJHi1oz
llylfgQJTOw33bzsAOmHQPHjMw+P36F44QJpb31imfSc+hul7D/Mz8+aSvFi
BHaVWM/3rX9F5TiBMNujZ03VpD9RoOTy2afBc0lPisAbC5atHBNO+9MFvC4n
Lx2QT+9JpoC3x4Wh2a+RHilQ3hAf/+gh5S8QsORYb94t1PwXCJzdtEG3gOJb
BAZO/uxF/RbqV4WSb03s8p12mnergD4p6criG9S/aoGNa+7VJ0zX/BdIbrWZ
j+rpPbALzPWKbfHvofvXKOB8reabck96D1oF7JfFxAp/Ot8msNS3wVj3VJt/
gTH22QMn+2nzL/Doj/6tc8upvz0ClyyOC0H7dRK5fg5DiJ0k0g3jzBtdqF6j
ROiT5tqFvqRnuMRaxwP0O7GXxKhDL1YXJZM/Zgn3g01/Z62l/AESyuNkdj6m
+S/RMuVBUGgd6YHElV0hdwJt2vxLONqz/jnFj5Jqf24Sx0iYXskqnDOB8sVJ
WFclbu3sJf2JEpWl0zwqAyheCsUrIT/TJXZUuaQemqDNv8Rq5XhGqTb/EikZ
nbtMZdr8S3R/7N6bbNL8l/jA8v7tiJf+SwSd6b64LZP2V0jMaR897/UazX8J
m1/9yoIIzX+JWz9mFbzZRudrJSIPOCsvHtVjl9iX593cHu2J4pBrozb9JF/+
H/4PMnUC7w==
           "]], 
          LineBox[{{795.3670664394165, 6.648059999999999}, {796., 6.24328}, {
           797., 6.10118}, {797.9774790877243, 6.648059999999999}}], 
          LineBox[CompressedData["
1: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
           "]]}}, {}, {}, {}, {}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{None, None},
       AxesOrigin->{0., 0},
       DisplayFunction->Identity,
       Frame->{{False, False}, {False, False}},
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->All,
       Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}},
       PlotLabel->FormBox["\"sigma\"", TraditionalForm],
       PlotRange->{{0., 1000.}, {0, 6.648059999999999}},
       PlotRangeClipping->True,
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}], {580.5, -392.6563145999496}, 
      ImageScaled[{0.5, 0.5}], {360., 245.41019662496848}], 
     InsetBox["", {967.5, -392.6563145999496}, {
      Center, Center}, {360., 245.41019662496848}]}}, {}},
  ContentSelectable->True,
  ImageSize->{790., Automatic},
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{3.771052059058909*^9, 3.77105280089583*^9, 
  3.771052836037428*^9, 
  3.7710531366158237`*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzsvWnUXdWZ33nDO0hiNNjGZadcVFUSJ5UaupJKp6ck3auHpPtDutNfku7+
IOzyBGYeDLhsMGCDbWY8IMyMmbHBNqMYhJhHgQABEiBAQoDEKIGZB93ev72f
/3Oefc65931foLKStbLXuhrOPfecPfyfZz/z/rdf2n+Xr+7xpf13/fKX/vDf
7PulvXfZ9cv7/eG/3mvfdGni7wwGEzsOBn/nr/9wwL+Hg4H+aLXP8kfn8n+M
q/9r/vfE8Igjjhjuuuuuw2984xuDLfKf08P77rsv33P33XcPDzvssOGhhx46
vPnmm7fIP5lsX/5cvrzd8Pnnn8+X1J599tnhkUcema+dd955ww8++CBff/PN
N4c/+9nP8vXjjz9++Nprrw0+k5+x/fD1118f/vSnPx1++9vfzj178skn8282
b948vOSSS/Jvvve97w2feOKJUdftWVvl737zm9/kZ/3N3/zN8MILL/Q+tIYw
KEOb6uvzYMf83aeHBxxwwPB3v/udj69nHGOv9/U1f/EHPcty0UUXDa+88kr7
H39unR+kTrz11lt5YC+88MKo658dsS68+7HHHsv9OeWUU4a33nprvn7xxRcP
L7/88vzvG2+8cXjGGWfYXO4wPP/884fXX399/o65P+igg/Jc3n///cPjjjsu
P4u5Y57594jrO9rjli1bNjzmmGOG77zzzvC9997L03XTTTeNHOGIbpfH7dhZ
mZ6RjL0+ahS0z5fF+T1bia997Wt6S1mwPzGi4P3MMoh79913C6DmD++4447h
mWee6V371a9+Nbzuuut0fQt7rC4XpJWfJlwO999//+G3vvWtPMJddtkl9+zl
l1/mmt6wYsWKPH80vn7ppZfyv5m/vffe+zN2W3uOeOorr7wyPOuss4a33Xab
aBvwP/300/XlCb8c+/frX/96eM011/gT0+3Dc845px7apA+t6vZE7LY9cYdO
H3uGM/b6mE7n739/hrX8x/mf84Zvv/12JsCDDz4444F29dVXs7YDDWvJkiUZ
T3Zd79TlOFHPPffc8Ec/+lFGeiRGCCldF+9Zt27d8Pvf/35GXuLDw/fff3+g
xzJCRsr/PpX/XJDvAxOLFy/OtPjoo4/mGeTfJ5544vCRRx7x3i5atGj4wAMP
6Loeq8uxtytXrsy9hY1Bnz/+8Y+H9957bz3QZvzVICZ8EM0Tp6tlDYPTkxgb
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
xIv52hqT4D/YvHkwq5Fm7vQkX//TWc3JvPh9bhhgElEw04PYbbvP5m1eHv9e
xy3x3yV1PS97uq+wjzmIjKCM6zcvX9d732yvTdufP//1/fk6kHzkqZfyVH7l
iMXTc+rWdGdq1j3/Gks9abNC06xkJqDpevbF3/kXs+26pgJmwPX9f7y0974p
+3PPNPUMCxWF79MmUBDSJ9L+Vc+1/OcMWEjknV/y8JMvORZeeOWNDhZO/e0D
eQ3VMOKedcWKD4eFowoWbrzv6Y8FCydfWrBwztUPZ2Mf4/nr718dsXDV7U8M
jz737jHdmupMzeI7nkxXZwACgPmwQEi7Rb6+3wxAYK4Z02NPv5K/f2nTm397
QLj/sRccCLBiPWPCJhvnfXQJ7pz+nRimvJx94/zGUdfln7Def9Bzn9ZxUdop
ue/cxQ87e/zi4VfpMbCjROL5f9uPWLPLblld1mx+XKSnntvkL5NC1LsgK57N
L93vxKXOpzX5q9a+nG9OxPHxT/6JF91bDKJLVvnkr3/p9Xryy9YzOXzv/Q+y
g8O2s53sjt2OLrO89N61tpNNZsMn18675pHhiiderPp9XJIR5Q/WtbT/a0My
+XoCNqVXlb5VU4uqqV5qu7vDpnHfE28wKaOIBWasMn4x5VBa+VQx0LMfzWGz
707jMUkN4YGJEfg0PveixxTW0/j6W+/mqRwxjTcsa6bxp78s03jBtY+gUzfT
2OdZlDYHmz/izDuquQS+o+cS+tZTPmW/eHzdK9kXk/bngRiaz+8JzfwigZ5x
+Yre+YWWaAlRbobYHDxk//1spjsrJdKWjj2/YCe90Sf6mRdGTHQSt4ZvJ5HV
Bj5hdzz57CbpHeY5nhjufkyZ/CX3NJOPAsC1C5NC8ODjPZMflUJNPhIXlPvW
O+/55EvU88lvTUPF11euebmzFklzzg9I7MTXImlfEoN9LZh3mFVcC618gk9+
aIJlr6NFHCT4E5o1niM5HG8UnsT1QdyveleJ5WM5bIa00jAaxpPk4MHn7Noe
x1yfb7vu7jW+R73z3vt5fp5PsgMmqCSfGT9oVjBpomwv3RXkx+0V/OWSVflH
V93+pK9g2gw6K9hZfX0h1McVlCCemLmvoFZ17+OXDITNoDEMttQKmr6dRpAf
mibMVxA+8rexgidetEw6pA8Y6b13Bdnl0INbK8g+oo19+zA+Jo6Ii2kb3x7H
+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
jHTtoPZxMsbENbs6md49NSWP0Vym/rqYF7eNLUkUunWWFMywOWGsDjFQRZ0x
4YFJAFcno/1JB9AklllFKamE6IGBqyX06hHtAxp45L2rNsQKXlwisVh0QFSy
lTHLjfN8naslsquk3oqrKX47cjUFrcTzC+TMl2ApriahTKEjR51zV8XV4sk1
Otzbla8+rqakm32aMxi6JVfnVSuUJ8nq+SVB2TmanUeg1mf1nx1Ho1kUlk85
Sk/0X0SO1k4mw/TVx9G0VXxFJf+nKj3HxuTzGayLuZ0f0gfVVUKqNDhxNCyP
lp3rBCbJZugcbV5WBEXLmF5VM4E5VaGc869t+ueHFBJB3fCGWGfL0paclcU4
jYVlM6yKb9czP5lzITa+5icdq9IKMyOLhXAe6zKpC6jqUlZ0X4eNGb0jksJD
Ekp1a0yxiRYfXVM8VDia2CaqMGYZd1SI71S5SEo6qM219ywWflFONHsEo+A8
uBg2MCfutDhQ26QXeMa4mkT3QM7N+ZkyNMMeNjesKb5Z0UD3P/aCy5AmIqFr
CNBYbyyjL7fImtB5qmyAijXFvABtd/HQP4UxyaEnliSXmGKBz/dstnnqnQ9C
9sW3361Y0lYVS9LyKRaKXUU8icOpRvIkG/JseJIF9w9n1CMjT9IZfZprqEXR
CKQARp60vDlQITc07z6epGPrEyORXICaEb0Im2Pf50UdODdL/SPypQrN1PjE
llDgZsuWVFgPzipBjpIJYkuX3ugVbmMmYuBWzhNgM2b2Hmxn166568nWBBdj
v8yda9e/KtYTj4nSz2OhM+eIiZ0YSCo2o14mmbBP89TP4zEaO9o6wFBVyldH
bieeobnDXqyC7DvaNYQdIgTTQHrZhwxTxj4G444d2XKmY0d0HM9kPolnsjqJ
J10WmmMxefEkwnIRYhBu0tADPS/wiHbZgeELin8200Plq6OtWP2icxnxEWzn
ohSUAyvGmdvFTimFK/F8r3HU4krvawa95hDqlHwHhyLfDyuWNOEsCQdViPIs
axHMjbo/XBqII0Wfh3LilaEGeYkjpWH1LnXSKWVki5lLSXio0iHHc6JFl3S9
uTRLkff5Bf0KLcXIETmRDlRXI3uhjxPJqfjX379a0yWHnh3L3cyxeFHofW7K
L+DsrPx+FSqCjGfDfLAqiflgRrFzv3JNXTGfaIRNE6F5iZYYMZ9Y9V7cIyRv
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
esFNPUBKU6YJKA0plV5GN+AhQAL/aW0CIBP64yhnvURldKwH3FQXVMcmebX6
ikhH9IUUxFdOjgtoxXRE4j0r9oy5+XkCLcFwvrsTW0BkevJhmzKfrs31LBN+
Zl0E5poq1KQCYiBa4YGUElCyZvzlRnRTKEmfFcXtftz3HBZqh3efUn3vAyyb
/Wmvg/Sil+qLahBRa7b3yTfH5krz4Xj02V+urM/B0uIPUfqt1/C3UvVz2W/u
ZbNCoX0POrZC5J3dhrOv6/ZZe0hk89M0hGz+ej4wZtPN3UmnntHsmLWf6REy
ASEuihYhN/cISdFnBprVh5eQW0XHmpfe+0hL6nv2kW66KrpJHrD+iCyHHR5R
sgfwqJ1umye0KaXAI+opVqGe6MhjT42h4MdecHfG9GZldo4FO/niO/NwFNRE
2awHHn4Cd2S8upOyMEayTyWnnPM+KCCkLOhrr7suLfjzTfmA5/ArYKNc/VXh
NT03kKEuYb/0BSE9kUviJHFpEZX/NKpOv/7ta6JpEevz5q9/XRvWleJnvegx
J56W10W5Mb4A5557bv63nKZ0q1b6zrp163YkbEgbxV6KL4+R6msJg8s0UFJX
35SkVT/ASBs75Bg5zkOZ897jYtk/r38cxywWIo+Cr0vaJ/kMUp5fanDtJVZm
uqPTtdaV4ltxOkj5dm3gqeJjkJKwnOookrHukn/InVNzrLyYhCbMPmSs4WI9
Yw1FLAuJcpdqQ5XCmDYiIDEpFEo/lm72yDO/BBKlVsviXZcraZ5GPMhyZQgO
M8SUsCWjDOnuUJjsSnfnkS/KgsjbzPRPh0LJhrQIIUacHNKtvItvzSXYPhA+
uwQQ1lmRIYdsqlUQs2yfWtcRjGBFw3E971zeAKF5C6Q+sFQ+2+yYC++HT84r
E5ZzoG85IBSwOQOoR8su9dIAoY7csnSxgeoRGeVekbXmxLGw5aK5yPXQEVlW
8xG1ImlGuiTk7KELEmlEct7TSUbOnnuvzqnWB3/z9u7gjWd1q9cfVxYsWWxX
XCtN4jrPqC+Rp2xmlPM/uvZWNmcqzCBCq2XP7atbU9y6k3vkZHjFCfukmT5N
PHckLdno3d8//Fh39Mbj4vzaAxSi2sZszjLdR057iQ6bKitZVr2AkwhYzv2T
vHb0k4guJhuu6fbad//uqLPLv1cfeDhextGaaK0Ut5BxJNtVCZtqYbHxzMtm
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
1wok4DUnvj3qOY/vT+MmKWg3PRi4qa2QqaihD+Am6eFQrFr5N7gpt8KqIrtH
uPnGO79rgiW80HZxE42N0hStejI2l8dNRZKUS8zYh0So4KZ3GdUHYHnHcHPb
BG5CyOCmd+XC1+w8r4Omm6eW7sSxo0SV0v8vD5w1t6U4kbrG1EjrEMDp3nQd
Sd4Flb7aAie2uWmb8mxydS8KCsy0Rqs3PRCYOcx+UKdqx0xv/uCYaVp8i5nj
tJjSg9oxU4fOpc2OmmMdVl4BcNJZJmYcLQec+KRIsyv53uW5UHKTLlnQo3lq
QWXb331h1ElLR5KPCGzvuSQNQnDg1mBLeisoU2yEwvH9YKggQ0EaFicIaqny
0VlF5Oh9jSSYrr9vK+upXocc1rF6PFp9vumWKPxWhhqgO9UaSUe1NONNRun3
cMSrowv0AT8O9VYHSX1+T5JdXN9TI0FSr+BLjE9wVSStsoV+9xeawDbtaJJI
bRB0IY+kPu644/Lgud///vfdSSed1D399NMID6SgfPt1WnB97F0zSpLJihJ/
eeUdQbtS+UA1KEIIVaenmLTs/7VLT6EFJpF6NT+vZNGVl/augA1MKt9MC6W+
ZMCkiw3aPKV9AiZls1F0xGXMlxEUjRoeIT2kPVVf8n+jvydbt8FIa0sRRGR7
HwYjrcdCSiwBkD82gOShXZF1qGR4beKLz7C3tasULZ7Uqq6BRYqHtk3Aoofj
aNXcTcHiOXe1sIjZDlBps5KyN4ZFL6GVmix5RerMxT0sDnvxkNn1m/c+XBYW
8XYwGMP7tIxT2wsxVksisgJt6ij0pdjr/x/I6H53Hf1En7nhdAqQ0ZO289iQ
LpwCvAzI6C3IE+Zy4ZrUy7FTqcRdDGT0CpdVx9wQRKz4dE90XZuV1lNGOeeJ
ILhBsTpBzNMufXjWhO51WGIrUElN0jeYTTRbwTD2/A3mG0whJwo4YtaRExx8
/e3eaeJjmnupxS9EmUM0tbrC2MekroOmr1uPMFllakoNmlof9SAnq3KMh5oS
AUqww84E07TAAgn9F6MwFSF5y+Y1Sd++ra+9oktL4fTyCD4Zj0u3KR/l0tI8
vBezLIF0joRy9akTS6uThpBC265DBiBk4qmwPFKN5/R0NlvIyj63IZ8xyROo
/xRLRQJEramHQNTNleFXvc4vSRTwVpZdvXK884cWhZC4EZ2n3R7grUaNvfLK
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
aFo+AO9w50J/Gex8rx0v/t/Pth75Fx3sFP4=\
\>"],ExpressionUUID->"0b697196-dd5d-4f81-a1fd-e26c1bc70c85"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1680, 990},
WindowMargins->{{-1680, Automatic}, {Automatic, 29}},
FrontEndVersion->"11.2 for Linux x86 (64-bit) (September 10, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 160, 3, 98, "Title",ExpressionUUID->"49379e96-7bf0-4c47-a2f9-951bf514b1c7"],
Cell[CellGroupData[{
Cell[765, 29, 163, 3, 65, "Subchapter",ExpressionUUID->"01ce18a6-a605-4b92-adde-2e201d75e881"],
Cell[931, 34, 180, 4, 31, "Input",ExpressionUUID->"9c9c1fdb-ee4f-4773-9410-af384f39e6ce"],
Cell[CellGroupData[{
Cell[1136, 42, 180, 4, 31, "Input",ExpressionUUID->"6e789827-ae6d-40b6-9021-0712d2dfe42c"],
Cell[1319, 48, 6449, 176, 127, "Print",ExpressionUUID->"f336afca-4e12-4495-a12d-c8cb3adb6fb2"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[7817, 230, 162, 3, 69, "Chapter",ExpressionUUID->"31a78942-7fb2-4844-aaf4-8c79eaafd7be"],
Cell[CellGroupData[{
Cell[8004, 237, 159, 3, 65, "Subchapter",ExpressionUUID->"dfaf227a-104d-4a80-90ac-75b0a4c84174"],
Cell[CellGroupData[{
Cell[8188, 244, 209, 4, 31, "Input",ExpressionUUID->"a0de6e16-3de1-42c9-b1a8-dbfac9a36660"],
Cell[8400, 250, 260, 4, 35, "Output",ExpressionUUID->"53e1721c-65bc-4d7e-94c3-2ebaafd52915"]
}, Open  ]],
Cell[8675, 257, 546, 12, 377, "Input",ExpressionUUID->"1fba61b7-b248-480f-8118-0f088e2f99de"],
Cell[CellGroupData[{
Cell[9246, 273, 386, 8, 31, "Input",ExpressionUUID->"64d8be3d-d7b2-4105-a1d3-9eda70ebdefb"],
Cell[9635, 283, 309, 5, 35, "Output",ExpressionUUID->"dd26c949-d50c-4a44-8aed-8f7526195c2a"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[9993, 294, 156, 3, 65, "Subchapter",ExpressionUUID->"65a60906-94c0-4691-b9bd-72b4c1e8817b"],
Cell[CellGroupData[{
Cell[10174, 301, 414, 8, 31, "Input",ExpressionUUID->"37c914f5-9aa2-4f11-99ef-f44a0899d661"],
Cell[10591, 311, 327, 6, 35, "Output",ExpressionUUID->"e0c92d63-02e0-4a98-93fe-58415c2a983d"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[10967, 323, 168, 3, 65, "Subchapter",ExpressionUUID->"5bddc0a9-3d73-4e93-89df-4b844e8a916a"],
Cell[CellGroupData[{
Cell[11160, 330, 1543, 42, 170, "Input",ExpressionUUID->"c13ee554-500c-4910-aa79-3b7cf06a0c9b"],
Cell[12706, 374, 3479, 76, 242, "Output",ExpressionUUID->"fdee63db-c534-49b1-9afa-8b2c1f4d7a21"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16222, 455, 270, 7, 31, "Input",ExpressionUUID->"7e175cb8-d120-44c6-8b30-e9ec48dc3c46"],
Cell[16495, 464, 309, 5, 35, "Output",ExpressionUUID->"63201a10-247b-4a62-9c5a-359a5da9422f"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[16853, 475, 164, 3, 65, "Subchapter",ExpressionUUID->"04e04e67-d72b-4748-80ff-e5e995a02cce"],
Cell[CellGroupData[{
Cell[17042, 482, 578, 15, 55, "Input",ExpressionUUID->"61e5808f-a56a-4af8-9f21-d750f560f951"],
Cell[17623, 499, 286, 5, 35, "Output",ExpressionUUID->"d4ad3228-dd2c-49ed-a69b-75fb32fcaa1c"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[17958, 510, 327, 6, 65, "Subchapter",ExpressionUUID->"e0cfeb10-bdc3-4c17-8229-f5b6d7070fba"],
Cell[CellGroupData[{
Cell[18310, 520, 372, 7, 31, "Input",ExpressionUUID->"01a3bbb1-49c1-4ce5-a1a8-456bc45817fc"],
Cell[CellGroupData[{
Cell[18707, 531, 612, 14, 25, "Print",ExpressionUUID->"4d2e6155-3723-4a40-9333-71e0cb38fb78"],
Cell[19322, 547, 1391, 19, 730, "Print",ExpressionUUID->"b9982a7d-7db2-4324-bd75-5eac950cdc14"]
}, Open  ]],
Cell[20728, 569, 256, 4, 35, "Output",ExpressionUUID->"da247567-8f03-41a9-84c2-d42900babe87"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21021, 578, 296, 6, 31, "Input",ExpressionUUID->"21d808c7-02d3-4c62-8527-848d3feedbc1"],
Cell[21320, 586, 256, 4, 35, "Output",ExpressionUUID->"bb4bb9b3-d328-4f89-bdad-238fb7c55a76"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21613, 595, 103, 0, 31, "Input",ExpressionUUID->"82adc528-4c39-41df-8c9b-e39c9357af43"],
Cell[21719, 597, 246, 4, 35, "Output",ExpressionUUID->"06b447e9-55ba-46be-a0f5-663cedc76bde"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[22014, 607, 163, 3, 65, "Subchapter",ExpressionUUID->"1ca7c626-53e2-494a-88ea-c7b0c80c5b4a"],
Cell[CellGroupData[{
Cell[22202, 614, 239, 5, 31, "Input",ExpressionUUID->"dca93945-02ef-43df-b9ec-29e1372a9718"],
Cell[22444, 621, 351, 5, 82, "Output",ExpressionUUID->"6ef46c13-c572-4437-b608-29bd058079ad"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22832, 631, 777, 17, 101, "Input",ExpressionUUID->"c2410238-a84f-43ba-a000-6aeff30d52e6"],
Cell[23612, 650, 366, 7, 35, "Output",ExpressionUUID->"0b2f0c15-5c6c-4815-88f7-47dda39ac607"],
Cell[23981, 659, 350, 6, 35, "Output",ExpressionUUID->"60f8d005-f038-43b3-8769-460299d8aaa7"],
Cell[24334, 667, 348, 6, 35, "Output",ExpressionUUID->"2e45dc31-9744-48f7-9b32-2b59d6ccd116"],
Cell[24685, 675, 350, 6, 35, "Output",ExpressionUUID->"615f1b92-46d8-415b-9a39-f1e0706adcc4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[25072, 686, 1181, 32, 78, "Input",ExpressionUUID->"ed7aa33f-ddb3-4f9d-8a76-b2092623b631"],
Cell[26256, 720, 15499, 319, 244, "Output",ExpressionUUID->"5d6bafd0-f3a6-45c5-b450-9d5f85814cbc"],
Cell[41758, 1041, 333, 6, 35, "Output",ExpressionUUID->"d1808916-a9a3-4c5d-9c05-ddb139003b01"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[42140, 1053, 377, 6, 65, "Subchapter",ExpressionUUID->"e0650e4e-8e5c-4d02-b01a-39eda7d06c19"],
Cell[CellGroupData[{
Cell[42542, 1063, 203, 4, 31, "Input",ExpressionUUID->"f38014c5-34a9-47ab-952c-5fd8f2fd979c"],
Cell[42748, 1069, 249, 4, 35, "Output",ExpressionUUID->"63bfda8f-1f5d-4226-bc4b-ee105001d7a5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[43034, 1078, 484, 12, 31, "Input",ExpressionUUID->"d9185ff5-7af0-43d3-9dcd-b21be2eaab78"],
Cell[43521, 1092, 340, 6, 35, "Output",ExpressionUUID->"6619f728-9e01-4ca4-aab0-afa9de9ff271"]
}, Open  ]],
Cell[CellGroupData[{
Cell[43898, 1103, 287, 7, 31, "Input",ExpressionUUID->"d278d42d-fffa-44c8-be15-817597f66ba1"],
Cell[44188, 1112, 448, 8, 35, "Output",ExpressionUUID->"aacfda5f-7b89-46b4-8b41-ff610ae337e8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[44673, 1125, 245, 5, 31, "Input",ExpressionUUID->"b32bf824-6875-4979-9062-0fa6c45452de"],
Cell[44921, 1132, 275, 5, 35, "Output",ExpressionUUID->"f207df6b-865b-43d0-94b2-1fdfadce01a0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[45233, 1142, 323, 7, 31, "Input",ExpressionUUID->"8cd00d13-fe1e-4685-8bd8-b4b50817326e"],
Cell[45559, 1151, 434, 7, 35, "Output",ExpressionUUID->"a3480c90-1032-4335-b8ee-03ea40552306"]
}, Open  ]],
Cell[CellGroupData[{
Cell[46030, 1163, 385, 8, 31, "Input",ExpressionUUID->"72b3cfd8-3711-4643-ae7d-b4e8cbc866ed"],
Cell[46418, 1173, 332, 6, 35, "Output",ExpressionUUID->"54b18edc-7a64-4bd1-a2d8-0565b44d9422"]
}, Open  ]],
Cell[CellGroupData[{
Cell[46787, 1184, 238, 5, 31, "Input",ExpressionUUID->"86437ec0-d003-4c24-a519-ecc2ea77ca62"],
Cell[47028, 1191, 412, 6, 82, "Output",ExpressionUUID->"2b5972c1-df50-4b44-8ded-d87da1f6756a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[47477, 1202, 559, 13, 78, "Input",ExpressionUUID->"870d3ff0-4552-41e1-8db3-ef413add9615"],
Cell[48039, 1217, 174, 3, 35, "Output",ExpressionUUID->"7c413ab5-91af-4b0d-95ac-e9a1637e7bfe"],
Cell[48216, 1222, 172, 3, 35, "Output",ExpressionUUID->"691abd0e-3d2c-499c-82f1-354422cb157b"],
Cell[48391, 1227, 2882, 56, 245, "Output",ExpressionUUID->"2ff13a02-6e5e-44ad-b604-24cd7ac850cc"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[51312, 1288, 74, 0, 69, "Chapter",ExpressionUUID->"ceb923f4-3c88-4c64-9575-3123e2b69553"],
Cell[CellGroupData[{
Cell[51411, 1292, 189, 3, 58, "Chapter",ExpressionUUID->"fa298fa5-3a74-4717-b0b4-9aeeec3c06ac"],
Cell[CellGroupData[{
Cell[51625, 1299, 157, 3, 65, "Subchapter",ExpressionUUID->"0fa28b2a-7c7f-4d04-90ad-8396e0c76133"],
Cell[51785, 1304, 698, 13, 331, "Input",ExpressionUUID->"5cb2c54d-6f85-4ec6-a213-7ac8956729b3"],
Cell[52486, 1319, 605, 15, 55, "Input",ExpressionUUID->"f2f789d6-693d-4515-9c84-6d16e23b5b3d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[53128, 1339, 161, 3, 65, "Subchapter",ExpressionUUID->"b63cfa1f-84b9-4308-9432-54303fad55a0"],
Cell[CellGroupData[{
Cell[53314, 1346, 2250, 56, 170, "Input",ExpressionUUID->"117ea801-5184-4f14-b3e1-0b695c0197bc"],
Cell[55567, 1404, 3970, 84, 239, "Output",ExpressionUUID->"1590db9f-a031-46bc-a4a0-29b76758c468"]
}, Open  ]],
Cell[CellGroupData[{
Cell[59574, 1493, 269, 7, 31, "Input",ExpressionUUID->"4116d0a9-795c-45f0-8d16-a3c9771b1d0e"],
Cell[59846, 1502, 184, 3, 35, "Output",ExpressionUUID->"47a7e4d0-688d-4139-8679-3ec8bb5739c6"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[60079, 1511, 159, 3, 65, "Subchapter",ExpressionUUID->"a7a21759-a845-4fa0-a5f1-ae05849a8e26"],
Cell[CellGroupData[{
Cell[60263, 1518, 1022, 24, 55, "Input",ExpressionUUID->"51c4635b-abfd-4b71-8b9f-9caf476a60ab"],
Cell[61288, 1544, 460, 7, 35, "Output",ExpressionUUID->"1705f5a6-6a61-4745-8282-a37a23cfdb9a"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[61797, 1557, 372, 6, 65, "Subchapter",ExpressionUUID->"ef49e676-75e9-44c1-b9d8-ea5b8396aec6"],
Cell[CellGroupData[{
Cell[62194, 1567, 419, 8, 31, "Input",ExpressionUUID->"ad2723e9-0b96-497e-9ab4-cee33bac8a64"],
Cell[CellGroupData[{
Cell[62638, 1579, 787, 18, 25, "Print",ExpressionUUID->"1f62e0c5-a966-42ca-8ce4-e349c3f5abf9"],
Cell[63428, 1599, 2670, 38, 1522, "Print",ExpressionUUID->"b935d509-76ca-44a5-aa3e-eb01f384d5bc"]
}, Open  ]],
Cell[66113, 1640, 292, 5, 35, "Output",ExpressionUUID->"cdfd8fa5-93bb-4d92-8df8-52cb007623ff"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[66454, 1651, 218, 4, 65, "Subchapter",ExpressionUUID->"8ced059e-2ccb-423d-9d6e-9b783f792d63"],
Cell[CellGroupData[{
Cell[66697, 1659, 244, 5, 31, "Input",ExpressionUUID->"aaf156fe-2a03-4fdb-9920-7bd0a54abb0b"],
Cell[66944, 1666, 347, 5, 82, "Output",ExpressionUUID->"2e12ee4d-d136-41c0-b393-d79bc9923d8f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[67328, 1676, 357, 9, 31, "Input",ExpressionUUID->"fe384450-d5e2-42ef-a561-0dae0398d6cd"],
Cell[67688, 1687, 247, 7, 35, "Output",ExpressionUUID->"e0ac5a91-4b7e-4105-9cd1-67e45be7f48c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[67972, 1699, 670, 17, 31, "Input",ExpressionUUID->"69f96883-f2a1-4b27-b639-7cc3235d50ef"],
Cell[68645, 1718, 378, 10, 35, "Output",ExpressionUUID->"2568bb31-227f-4b23-9406-d522a3fa3340"]
}, Open  ]],
Cell[CellGroupData[{
Cell[69060, 1733, 596, 14, 31, "Input",ExpressionUUID->"d127a790-7232-4bab-878b-4883885ca4e1"],
Cell[69659, 1749, 21801, 550, 159, "Output",ExpressionUUID->"7ff6f22e-0f49-473a-a1b6-c13ab5e4719d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[91497, 2304, 319, 8, 31, "Input",ExpressionUUID->"3b01a2f7-7335-4ea6-aba4-0c15d18a1de2"],
Cell[91819, 2314, 286, 6, 35, "Output",ExpressionUUID->"6ffe003c-ce8d-41a0-9670-e5558d4e2499"]
}, Open  ]],
Cell[CellGroupData[{
Cell[92142, 2325, 287, 5, 55, "Input",ExpressionUUID->"941e6fb6-0457-4f0c-ad15-34bbb4bbcdf9"],
Cell[92432, 2332, 296, 6, 35, "Output",ExpressionUUID->"72ac7333-1fa5-44b3-8169-7fdd42a70f37"],
Cell[92731, 2340, 379, 8, 35, "Output",ExpressionUUID->"63246db2-abf4-42e4-81f6-1da478bbb230"]
}, Open  ]],
Cell[CellGroupData[{
Cell[93147, 2353, 350, 7, 55, "Input",ExpressionUUID->"dcbcdb5c-685a-4e92-9ee5-b78747f9a460"],
Cell[93500, 2362, 225, 6, 35, "Output",ExpressionUUID->"ab6efb0f-6fb2-4f5c-80c1-1bfef920a21e"],
Cell[93728, 2370, 352, 7, 35, "Output",ExpressionUUID->"51390b2d-fd9a-453a-8cfa-186a62bf1823"]
}, Open  ]],
Cell[CellGroupData[{
Cell[94117, 2382, 378, 8, 55, "Input",ExpressionUUID->"f487be0a-bc01-43f1-a1e2-016db05b4ea8"],
Cell[94498, 2392, 188, 4, 35, "Output",ExpressionUUID->"45cf9b09-74a9-4a23-a733-6b222abfa5fb"],
Cell[94689, 2398, 268, 7, 35, "Output",ExpressionUUID->"a282ca3f-7c47-4f07-8428-15fecbfea64a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[94994, 2410, 1002, 29, 101, "Input",ExpressionUUID->"7ae70516-0468-4586-b963-a423a31cd620"],
Cell[95999, 2441, 168651, 2838, 371, 77010, 1335, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"0b697196-dd5d-4f81-a1fd-e26c1bc70c85"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

